{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/lib/client/servicesData.ts"],"sourcesContent":["// Define the structure for city data\nexport interface ByData {\n  [key: string]: { name: string; region: string; postnummer: string };\n}\n\n// Define available cities\nexport const byData: ByData = {\n  hundested: { name: \"Hundested\", region: \"Halsnæs\", postnummer: \"3390\" },\n  frederiksvaerk: {\n    name: \"Frederiksværk\",\n    region: \"Halsnæs\",\n    postnummer: \"3300\",\n  },\n  liseleje: { name: \"Liseleje\", region: \"Halsnæs\", postnummer: \"3360\" },\n  melby: { name: \"Melby\", region: \"Halsnæs\", postnummer: \"3370\" },\n  olsted: { name: \"Ølsted\", region: \"Halsnæs\", postnummer: \"3310\" },\n  tise: { name: \"Tisvildeleje\", region: \"Nordsjælland\", postnummer: \"3220\" },\n  helsinge: { name: \"Helsinge\", region: \"Nordsjælland\", postnummer: \"3200\" },\n};\n\nexport interface ServiceData {\n  key: string;\n  name: string;\n  icon: string;\n  image1: string;\n  image2: string;\n  image3: string;\n}\n\nexport const services: ServiceData[] = [\n  {\n    key: \"graesslaaning\",\n    name: \"Græsslåning\",\n    icon: \"/lawn.png\",\n    image1: \"/grass1.jpeg\",\n    image2: \"/grass2.jpeg\",\n    image3: \"/grass3.jpeg\",\n  },\n  {\n    key: \"beskaering\",\n    name: \"Beskæring\",\n    icon: \"/trim.png\",\n    image1: \"/prune1.jpeg\",\n    image2: \"/prune2.jpeg\",\n    image3: \"/prune3.jpeg\",\n  },\n  {\n    key: \"haekkeklipning\",\n    name: \"Hækkeklipning\",\n    icon: \"/hedge.png\",\n    image1: \"/hedge1.jpeg\",\n    image2: \"/hedge2.jpeg\",\n    image3: \"/hedge3.jpeg\",\n  },\n  {\n    key: \"brolaegning\",\n    name: \"Brolægning\",\n    icon: \"/tile.png\",\n    image1: \"/paving1.jpeg\",\n    image2: \"/paving2.jpeg\",\n    image3: \"/paving3.jpeg\",\n  },\n  {\n    key: \"snerydning\",\n    name: \"Snerydning\",\n    icon: \"/snow.png\",\n    image1: \"/grass1.jpeg\",\n    image2: \"/grass2.jpeg\",\n    image3: \"/grass3.jpeg\",\n  },\n  {\n    key: \"bortskaffelse\",\n    name: \"Bortskaffelse\",\n    icon: \"/reno.png\",\n    image1: \"/grass1.jpeg\",\n    image2: \"/grass2.jpeg\",\n    image3: \"/grass3.jpeg\",\n  },\n  {\n    key: \"ukrudtsfjernelse\",\n    name: \"Ukrudtsfjernelse\",\n    icon: \"/weeds.png\",\n    image1: \"/weeds1.jpeg\",\n    image2: \"/weeds2.jpeg\",\n    image3: \"/weeds3.jpeg\",\n  },\n  {\n    key: \"byggepladsservice\",\n    name: \"Byggepladsservice\",\n    icon: \"/construction.png\",\n    image1: \"/grass1.jpeg\",\n    image2: \"/grass2.jpeg\",\n    image3: \"/grass3.jpeg\",\n  },\n];\n"],"names":[],"mappings":"AAAA,qCAAqC;;;;;AAM9B,MAAM,SAAiB;IAC5B,WAAW;QAAE,MAAM;QAAa,QAAQ;QAAW,YAAY;IAAO;IACtE,gBAAgB;QACd,MAAM;QACN,QAAQ;QACR,YAAY;IACd;IACA,UAAU;QAAE,MAAM;QAAY,QAAQ;QAAW,YAAY;IAAO;IACpE,OAAO;QAAE,MAAM;QAAS,QAAQ;QAAW,YAAY;IAAO;IAC9D,QAAQ;QAAE,MAAM;QAAU,QAAQ;QAAW,YAAY;IAAO;IAChE,MAAM;QAAE,MAAM;QAAgB,QAAQ;QAAgB,YAAY;IAAO;IACzE,UAAU;QAAE,MAAM;QAAY,QAAQ;QAAgB,YAAY;IAAO;AAC3E;AAWO,MAAM,WAA0B;IACrC;QACE,KAAK;QACL,MAAM;QACN,MAAM;QACN,QAAQ;QACR,QAAQ;QACR,QAAQ;IACV;IACA;QACE,KAAK;QACL,MAAM;QACN,MAAM;QACN,QAAQ;QACR,QAAQ;QACR,QAAQ;IACV;IACA;QACE,KAAK;QACL,MAAM;QACN,MAAM;QACN,QAAQ;QACR,QAAQ;QACR,QAAQ;IACV;IACA;QACE,KAAK;QACL,MAAM;QACN,MAAM;QACN,QAAQ;QACR,QAAQ;QACR,QAAQ;IACV;IACA;QACE,KAAK;QACL,MAAM;QACN,MAAM;QACN,QAAQ;QACR,QAAQ;QACR,QAAQ;IACV;IACA;QACE,KAAK;QACL,MAAM;QACN,MAAM;QACN,QAAQ;QACR,QAAQ;QACR,QAAQ;IACV;IACA;QACE,KAAK;QACL,MAAM;QACN,MAAM;QACN,QAAQ;QACR,QAAQ;QACR,QAAQ;IACV;IACA;QACE,KAAK;QACL,MAAM;QACN,MAAM;QACN,QAAQ;QACR,QAAQ;QACR,QAAQ;IACV;CACD"}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/lib/client/fetchData.ts"],"sourcesContent":["import { byData, services } from \"./servicesData\";\n\nexport const getAllServices = () => {\n  return services;\n};\n\nexport const getServiceInfo = (serviceKey: string) => {\n  return services.find((service) => service.key === serviceKey) || null;\n};\n\n// Fetch city information by key\nexport const getCityInfo = (cityKey: string) => {\n  return byData[cityKey] || null;\n};\n"],"names":[],"mappings":";;;;;AAAA;;AAEO,MAAM,iBAAiB;IAC5B,OAAO,oIAAA,CAAA,WAAQ;AACjB;AAEO,MAAM,iBAAiB,CAAC;IAC7B,OAAO,oIAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,CAAC,UAAY,QAAQ,GAAG,KAAK,eAAe;AACnE;AAGO,MAAM,cAAc,CAAC;IAC1B,OAAO,oIAAA,CAAA,SAAM,CAAC,QAAQ,IAAI;AAC5B"}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/app/%28client%29/service/%5Bservice%5D/ServiceClient.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(client)/service/[service]/ServiceClient.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(client)/service/[service]/ServiceClient.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAwT,GACrV,sFACA"}},
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/app/%28client%29/service/%5Bservice%5D/ServiceClient.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(client)/service/[service]/ServiceClient.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(client)/service/[service]/ServiceClient.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoS,GACjU,kEACA"}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/app/%28client%29/service/%5Bservice%5D/%5Bby%5D/page.tsx"],"sourcesContent":["import { getCityInfo, getServiceInfo } from \"@/lib/client/fetchData\";\nimport ServiceClient from \"../ServiceClient\";\n\nconst CityServicePage = async ({\n  params,\n}: {\n  params: { service: string; by: string };\n}) => {\n  const serviceInfo = getServiceInfo(params.service);\n  const cityInfo = getCityInfo(params.by);\n\n  if (!serviceInfo || !cityInfo) {\n    return <div>Service eller by ikke fundet</div>;\n  }\n\n  return (\n    <ServiceClient\n      serviceInfo={serviceInfo}\n      serviceKey={params.service}\n      cityInfo={cityInfo}\n    />\n  );\n};\n\nexport default CityServicePage;\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEA,MAAM,kBAAkB,OAAO,EAC7B,MAAM,EAGP;IACC,MAAM,cAAc,CAAA,GAAA,iIAAA,CAAA,iBAAc,AAAD,EAAE,OAAO,OAAO;IACjD,MAAM,WAAW,CAAA,GAAA,iIAAA,CAAA,cAAW,AAAD,EAAE,OAAO,EAAE;IAEtC,IAAI,CAAC,eAAe,CAAC,UAAU;QAC7B,qBAAO,8OAAC;sBAAI;;;;;;IACd;IAEA,qBACE,8OAAC,oKAAA,CAAA,UAAa;QACZ,aAAa;QACb,YAAY,OAAO,OAAO;QAC1B,UAAU;;;;;;AAGhB;uCAEe"}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 273, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/utils/supabase/client.ts"],"sourcesContent":["import { createBrowserClient } from \"@supabase/ssr\";\n\nexport function createClient() {\n  return createBrowserClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n  );\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEO,SAAS;IACd,OAAO,CAAA,GAAA,0KAAA,CAAA,sBAAmB,AAAD;AAI3B"}},
    {"offset": {"line": 282, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 288, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/lib/client/actions.ts"],"sourcesContent":["\"use server\";\n\nimport { createClient } from \"@/utils/supabase/client\";\n\nexport async function getAllNews(page: number = 1, limit: number = 3) {\n  const supabase = createClient();\n  const offset = (page - 1) * limit;\n\n  try {\n    const { data, count, error } = await supabase\n      .from(\"news\")\n      .select(\"*\", { count: \"exact\" })\n      .order(\"created_at\", { ascending: false })\n      .range(offset, offset + limit - 1);\n\n    if (error) {\n      throw new Error(`Failed to fetch news: ${error.message}`);\n    }\n\n    return { news: data, total: count || 0 };\n  } catch (err) {\n    console.error(\"Unexpected error during fetching news:\", err);\n    throw err;\n  }\n}\n\nexport async function getLatestNews() {\n  const supabase = createClient();\n\n  const { data, error } = await supabase\n    .from(\"news\")\n    .select(\"*\")\n    .order(\"created_at\", { ascending: false })\n    .limit(5);\n\n  if (error) {\n    throw new Error(\"Failed to fetch latest news: \" + error.message);\n  }\n\n  return data;\n}\n\n//REVIEWS\n\nexport async function getLatestReviews() {\n  const supabase = createClient();\n\n  try {\n    const { data, error } = await supabase\n      .from(\"reviews\")\n      .select(\"*\")\n      .order(\"created_at\", { ascending: false })\n      .limit(10);\n\n    if (error) {\n      throw new Error(\"Failed to fetch latest reviews: \" + error.message);\n    }\n\n    return data;\n  } catch (err) {\n    console.error(\"Unexpected error during fetching reviews:\", err);\n    throw err;\n  }\n}\n\nexport async function createRequest(\n  name: string,\n  mobile: string,\n  mail: string,\n  category: string,\n  consent: boolean,\n  message: string\n): Promise<void> {\n  const supabase = createClient();\n\n  try {\n    // Hent brugerens IP-adresse\n    const ipResponse = await fetch(\"https://api64.ipify.org?format=json\");\n    const ipData = await ipResponse.json();\n    const ipAddress = ipData.ip;\n\n    const consentTimestamp = consent ? new Date().toISOString() : null;\n\n    // Indsæt data i databasen\n    const { error } = await supabase.from(\"requests\").insert([\n      {\n        name,\n        mobile,\n        mail,\n        category,\n        consent,\n        message,\n        consent_timestamp: consentTimestamp,\n        ip_address: ipAddress,\n        terms_version: \"v1.0\",\n      },\n    ]);\n\n    if (error) {\n      throw new Error(`Failed to create request: ${error.message}`);\n    }\n  } catch (error) {\n    console.error(\"Error in createRequest:\", error);\n    throw error;\n  }\n}\n"],"names":[],"mappings":";;;;;;;;AAEA;;;;;AAEO,eAAe,uCAAQ,GAAR,WAAW,OAAe,CAAC,EAAE,QAAgB,CAAC;IAClE,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,eAAY,AAAD;IAC5B,MAAM,SAAS,CAAC,OAAO,CAAC,IAAI;IAE5B,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,MAAM,SAClC,IAAI,CAAC,QACL,MAAM,CAAC,KAAK;YAAE,OAAO;QAAQ,GAC7B,KAAK,CAAC,cAAc;YAAE,WAAW;QAAM,GACvC,KAAK,CAAC,QAAQ,SAAS,QAAQ;QAElC,IAAI,OAAO;YACT,MAAM,IAAI,MAAM,CAAC,sBAAsB,EAAE,MAAM,OAAO,EAAE;QAC1D;QAEA,OAAO;YAAE,MAAM;YAAM,OAAO,SAAS;QAAE;IACzC,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,0CAA0C;QACxD,MAAM;IACR;AACF;AAEO,eAAe,uCAAW,GAAX;IACpB,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,eAAY,AAAD;IAE5B,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,QACL,MAAM,CAAC,KACP,KAAK,CAAC,cAAc;QAAE,WAAW;IAAM,GACvC,KAAK,CAAC;IAET,IAAI,OAAO;QACT,MAAM,IAAI,MAAM,kCAAkC,MAAM,OAAO;IACjE;IAEA,OAAO;AACT;AAIO,eAAe,uCAAc,GAAd;IACpB,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,eAAY,AAAD;IAE5B,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,WACL,MAAM,CAAC,KACP,KAAK,CAAC,cAAc;YAAE,WAAW;QAAM,GACvC,KAAK,CAAC;QAET,IAAI,OAAO;YACT,MAAM,IAAI,MAAM,qCAAqC,MAAM,OAAO;QACpE;QAEA,OAAO;IACT,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,6CAA6C;QAC3D,MAAM;IACR;AACF;AAEO,eAAe,uCAAW,GAAX,cACpB,IAAY,EACZ,MAAc,EACd,IAAY,EACZ,QAAgB,EAChB,OAAgB,EAChB,OAAe;IAEf,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,eAAY,AAAD;IAE5B,IAAI;QACF,4BAA4B;QAC5B,MAAM,aAAa,MAAM,MAAM;QAC/B,MAAM,SAAS,MAAM,WAAW,IAAI;QACpC,MAAM,YAAY,OAAO,EAAE;QAE3B,MAAM,mBAAmB,UAAU,IAAI,OAAO,WAAW,KAAK;QAE9D,0BAA0B;QAC1B,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,YAAY,MAAM,CAAC;YACvD;gBACE;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA,mBAAmB;gBACnB,YAAY;gBACZ,eAAe;YACjB;SACD;QAED,IAAI,OAAO;YACT,MAAM,IAAI,MAAM,CAAC,0BAA0B,EAAE,MAAM,OAAO,EAAE;QAC9D;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,MAAM;IACR;AACF;;;IArGsB;IAsBA;IAkBA;IAqBA;;AA7DA,+OAAA;AAsBA,+OAAA;AAkBA,+OAAA;AAqBA,+OAAA"}},
    {"offset": {"line": 388, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 394, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 399, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}