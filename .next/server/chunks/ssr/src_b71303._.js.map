{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/lib/client/actions.ts"],"sourcesContent":["\"use server\";\n\nimport { createClient } from \"@/utils/supabase/client\";\n\nexport async function getAllNews(page: number = 1, limit: number = 3) {\n  const supabase = createClient();\n  const offset = (page - 1) * limit;\n\n  try {\n    const { data, count, error } = await supabase\n      .from(\"news\")\n      .select(\"*\", { count: \"exact\" })\n      .order(\"created_at\", { ascending: false })\n      .range(offset, offset + limit - 1);\n\n    if (error) {\n      throw new Error(`Failed to fetch news: ${error.message}`);\n    }\n\n    return { news: data, total: count || 0 };\n  } catch (err) {\n    console.error(\"Unexpected error during fetching news:\", err);\n    throw err;\n  }\n}\n\nexport async function getLatestNews() {\n  const supabase = createClient();\n\n  const { data, error } = await supabase\n    .from(\"news\")\n    .select(\"*\")\n    .order(\"created_at\", { ascending: false })\n    .limit(5);\n\n  if (error) {\n    throw new Error(\"Failed to fetch latest news: \" + error.message);\n  }\n\n  return data;\n}\n\n//REVIEWS\n\nexport async function getLatestReviews() {\n  const supabase = createClient();\n\n  try {\n    const { data, error } = await supabase\n      .from(\"reviews\")\n      .select(\"*\")\n      .order(\"created_at\", { ascending: false })\n      .limit(10);\n\n    if (error) {\n      throw new Error(\"Failed to fetch latest reviews: \" + error.message);\n    }\n\n    return data;\n  } catch (err) {\n    console.error(\"Unexpected error during fetching reviews:\", err);\n    throw err;\n  }\n}\n\nexport async function createRequest(\n  name: string,\n  mobile: string,\n  mail: string,\n  category: string,\n  consent: boolean,\n  message: string\n): Promise<void> {\n  const supabase = createClient();\n\n  try {\n    // Hent brugerens IP-adresse\n    const ipResponse = await fetch(\"https://api64.ipify.org?format=json\");\n    const ipData = await ipResponse.json();\n    const ipAddress = ipData.ip;\n\n    const consentTimestamp = consent ? new Date().toISOString() : null;\n\n    // Indsæt data i databasen\n    const { error } = await supabase.from(\"requests\").insert([\n      {\n        name,\n        mobile,\n        mail,\n        category,\n        consent,\n        message,\n        consent_timestamp: consentTimestamp,\n        ip_address: ipAddress,\n        terms_version: \"v1.0\",\n      },\n    ]);\n\n    if (error) {\n      throw new Error(`Failed to create request: ${error.message}`);\n    }\n  } catch (error) {\n    console.error(\"Error in createRequest:\", error);\n    throw error;\n  }\n}\n"],"names":[],"mappings":";;;;;;;;IAIsB;IAsBA;IAkBA;IAqBA"}},
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/components/client/forms/TaskSelect.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\n\ninterface ContactSelectProps {\n  onChange: (value: string) => void;\n  isCallForm?: boolean;\n}\n\nconst TaskSelect = ({ onChange, isCallForm = false }: ContactSelectProps) => {\n  const [selectedOption, setSelectedOption] = useState(\"\");\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const value = event.target.value;\n    setSelectedOption(value);\n    onChange(value);\n  };\n\n  return (\n    <label className=\"form-control w-full max-w-xs\">\n      <div className=\"label\">\n        <span className=\"label-text md:text-base\">\n          Hvilken opgave ønsker du?\n        </span>\n      </div>\n      <select\n        className={`select select-bordered ${\n          isCallForm ? \"md:select-lg\" : \"select-md\"\n        }`}\n        value={selectedOption}\n        onChange={handleChange}\n        required\n      >\n        <option value=\"\" disabled>\n          Vælg opgave\n        </option>\n        <option value=\"Græsslåning\">Græsslåning</option>\n        <option value=\"Hækkeklipning\">Hækkeklipning</option>\n        <option value=\"Brolægning\">Brolægning</option>\n        <option value=\"Plantning\">Plantning</option>\n        <option value=\"Snerydning\">Snerydning</option>\n        <option value=\"Ukrudtfjernelse\">Ukrudtfjernelse</option>\n        <option value=\"Beskæring\">Beskæring</option>\n        <option value=\"Plantning\">Snerydning</option>\n        <option value=\"Bortskaffelse\">Bortskaffelse</option>\n        <option value=\"Specialopgaver\">Specialopgaver</option>\n        <option value=\"Andet\">Andet</option>\n      </select>\n    </label>\n  );\n};\n\nexport default TaskSelect;\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AASA,MAAM,aAAa,CAAC,EAAE,QAAQ,EAAE,aAAa,KAAK,EAAsB;IACtE,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAErD,MAAM,eAAe,CAAC;QACpB,MAAM,QAAQ,MAAM,MAAM,CAAC,KAAK;QAChC,kBAAkB;QAClB,SAAS;IACX;IAEA,qBACE,8OAAC;QAAM,WAAU;;0BACf,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAK,WAAU;8BAA0B;;;;;;;;;;;0BAI5C,8OAAC;gBACC,WAAW,CAAC,uBAAuB,EACjC,aAAa,iBAAiB,aAC9B;gBACF,OAAO;gBACP,UAAU;gBACV,QAAQ;;kCAER,8OAAC;wBAAO,OAAM;wBAAG,QAAQ;kCAAC;;;;;;kCAG1B,8OAAC;wBAAO,OAAM;kCAAc;;;;;;kCAC5B,8OAAC;wBAAO,OAAM;kCAAgB;;;;;;kCAC9B,8OAAC;wBAAO,OAAM;kCAAa;;;;;;kCAC3B,8OAAC;wBAAO,OAAM;kCAAY;;;;;;kCAC1B,8OAAC;wBAAO,OAAM;kCAAa;;;;;;kCAC3B,8OAAC;wBAAO,OAAM;kCAAkB;;;;;;kCAChC,8OAAC;wBAAO,OAAM;kCAAY;;;;;;kCAC1B,8OAAC;wBAAO,OAAM;kCAAY;;;;;;kCAC1B,8OAAC;wBAAO,OAAM;kCAAgB;;;;;;kCAC9B,8OAAC;wBAAO,OAAM;kCAAiB;;;;;;kCAC/B,8OAAC;wBAAO,OAAM;kCAAQ;;;;;;;;;;;;;;;;;;AAI9B;uCAEe"}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/components/client/forms/CallMeForm.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport emailjs from \"emailjs-com\";\nimport { createRequest } from \"@/lib/client/actions\";\nimport TaskSelect from \"./TaskSelect\";\nimport ConsentModal from \"../modal/ConsentModal\";\n\nconst CallMeForm = () => {\n  const [name, setName] = useState(\"\");\n  const [mobile, setMobile] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [isChecked, setIsChecked] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n\n  const validatePhoneNumber = (phoneNumber: string) => {\n    const danishPhoneRegex = /^(?:\\+45\\d{8}|\\d{8})$/;\n    return danishPhoneRegex.test(phoneNumber);\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!validatePhoneNumber(mobile)) {\n      setMessage(\"Ugyldigt telefonnummer\");\n      return;\n    }\n\n    if (!isChecked) {\n      setMessage(\"Du skal acceptere opbevaring af dine oplysninger.\");\n      return;\n    }\n\n    setIsLoading(true);\n    setMessage(\"\");\n\n    try {\n      // 1. Gem kundehenvendelsen i databasen\n      await createRequest(name, mobile, \"\", category, isChecked, \"\");\n\n      // 2. Send e-mail til virksomheden via EmailJS\n      const serviceId = process.env.NEXT_PUBLIC_EMAILJS_SERVICE_ID!;\n      const templateId = process.env.NEXT_PUBLIC_EMAILJS_TEMPLATE_ID!;\n      const publicKey = process.env.NEXT_PUBLIC_EMAILJS_PUBLIC_KEY!;\n\n      await emailjs.send(\n        serviceId,\n        templateId,\n        {\n          from_name: name,\n        },\n        publicKey\n      );\n\n      setIsSuccess(true);\n      setMessage(\"Henvendelsen er sendt.\");\n    } catch (error) {\n      console.error(\"Failed to send email:\", error);\n      setMessage(\"Noget gik galt. Prøv igen senere.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleClose = () => {\n    setIsSuccess(false);\n    setMessage(\"\");\n    setName(\"\");\n    setMobile(\"\");\n    setCategory(\"\");\n    setIsChecked(false);\n  };\n\n  return (\n    <div>\n      {isSuccess ? (\n        <div className=\"flex flex-col gap-4 bg-base-100 p-8 md:p-10\">\n          <h2 className=\"text-xl font-bold\">Tak for din henvendelse!</h2>\n          <p>Vi vender tilbage til dig hurtigst muligt.</p>\n          <button onClick={handleClose} className=\"btn btn-primary mt-5\">\n            Luk\n          </button>\n        </div>\n      ) : (\n        <form\n          onSubmit={handleSubmit}\n          className=\"flex flex-col gap-4 bg-base-100 p-8 md:p-10 rounded-lg relative\"\n        >\n          <h2 className=\"text-2xl font-bold\">Bliv ringet op</h2>\n          <TaskSelect\n            onChange={(value) => setCategory(value)}\n            isCallForm={true}\n          />\n          <label htmlFor=\"name\" className=\"form-control w-full max-w-xs\">\n            <div className=\"label\">\n              <span className=\"label-text md:text-base\">Navn</span>\n            </div>\n            <input\n              id=\"name\"\n              name=\"name\"\n              autoComplete=\"name\"\n              type=\"text\"\n              placeholder=\"Skriv dit navn\"\n              className=\"input input-bordered input-md md:input-lg w-full max-w-xs\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              required\n            />\n          </label>\n          <label htmlFor=\"phone\" className=\"form-control w-full max-w-xs\">\n            <div className=\"label\">\n              <span className=\"label-text md:text-base\">Mobilnummer</span>\n            </div>\n            <input\n              autoComplete=\"tel\"\n              id=\"phone\"\n              type=\"tel\"\n              placeholder=\"Indtast 8-cifret nummer\"\n              className=\"input input-bordered input-md md:input-lg w-full\"\n              value={mobile}\n              onChange={(e) => setMobile(e.target.value)}\n              required\n            />\n          </label>\n          <div className=\"flex items-center justify-start gap-3\">\n            <label className=\"cursor-pointer flex items-center justify-start gap-3\">\n              <input\n                type=\"checkbox\"\n                className=\"checkbox checkbox-md md:checkbox-lg checkbox-primary\"\n                checked={isChecked}\n                onChange={(e) => setIsChecked(e.target.checked)}\n                required\n              />\n            </label>\n            <span className=\"label-text text-xs md:text-sm max-w-60\">\n              Jeg giver samtykke til opbevaring af mine oplysninger. &nbsp;\n              <ConsentModal buttonText=\"Læs mere\" variant=\"primary\" />\n            </span>\n          </div>\n          <div className=\"absolute bottom-28\">\n            {message && (\n              <p className={`text-${isSuccess ? \"green\" : \"red\"}-500`}>\n                {message}\n              </p>\n            )}\n          </div>\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary mt-10\"\n            disabled={isLoading}\n          >\n            {isLoading ? \"Sender...\" : \"Bliv kontaktet\"}\n          </button>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default CallMeForm;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 464, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 470, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/components/client/home/Hero.tsx"],"sourcesContent":["\"use client\";\nimport Link from \"next/link\";\nimport React from \"react\";\nimport { FaCalendar, FaPhone } from \"react-icons/fa6\";\n\nconst Hero = () => {\n  return (\n    <div\n      className=\"hero min-h-[250px] md:min-h-[600px] mt-[75px]\"\n      style={{\n        backgroundImage: \"url(/hero.png)\",\n        backgroundPosition: \"50% 30%\",\n        backgroundSize: \"cover\",\n      }}\n    >\n      <div className=\"hero-overlay bg-gray-500 md:bg-gray-700 bg-opacity-30  md:bg-opacity-20\"></div>\n      <div className=\"hero-content text-neutral-content text-center\">\n        <div className=\"max-w-xl lg:max-w-2xl text-center flex flex-col justify-center items-center mx-auto md:mt-20\">\n          <h1 className=\"mb-5 text-2xl md:text-4xl lg:text-5xl font-bold\">\n            Professionel Haveservice\n          </h1>\n          <p className=\"mb-5 text-lg font-medium md:text-2xl lg:text-3xl drop-shadow-lg\">\n            Din have, vores passion <br />\n          </p>\n          <Link\n            href=\"/tilbud\"\n            className=\"btn btn-primary  md:text-lg hidden md:flex\"\n          >\n            Få et tilbud\n          </Link>\n          <div className=\"gap-16 md:gap-32 mt-5 hidden md:flex\">\n            <div className=\"flex flex-col shadow-xl items-center justify-center gap-2 md:gap-3 w-32 h-28 md:w-48 md:h-40 rounded-lg\">\n              <FaCalendar className=\"text-2xl md:text-4xl text-primary\" />\n              <div className=\"flex flex-col items-center gap-0\">\n                <h3 className=\"md:text-xl font-bold\">Alle dage</h3>\n                <h3 className=\"md:text-xl font-bold\">07 - 17</h3>\n              </div>\n            </div>\n            <div className=\"flex flex-col shadow-xl items-center justify-center gap-2 md:gap-3 w-32 h-28 md:w-48 md:h-40 rounded-lg\">\n              <FaPhone className=\"text-2xl md:text-4xl  text-primary\" />\n              <div className=\"flex flex-col items-center gap-0\">\n                <h3 className=\"md:text-xl font-bold\">Ring til os</h3>\n                <a className=\"md:text-xl font-bold\" href=\"tel:+4526181201\">\n                  +45 26 18 12 01\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Hero;\n"],"names":[],"mappings":";;;;AACA;AAEA;AAHA;;;;AAKA,MAAM,OAAO;IACX,qBACE,8OAAC;QACC,WAAU;QACV,OAAO;YACL,iBAAiB;YACjB,oBAAoB;YACpB,gBAAgB;QAClB;;0BAEA,8OAAC;gBAAI,WAAU;;;;;;0BACf,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAkD;;;;;;sCAGhE,8OAAC;4BAAE,WAAU;;gCAAkE;8CACrD,8OAAC;;;;;;;;;;;sCAE3B,8OAAC,4JAAA,CAAA,UAAI;4BACH,MAAK;4BACL,WAAU;sCACX;;;;;;sCAGD,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,+IAAA,CAAA,aAAU;4CAAC,WAAU;;;;;;sDACtB,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAG,WAAU;8DAAuB;;;;;;8DACrC,8OAAC;oDAAG,WAAU;8DAAuB;;;;;;;;;;;;;;;;;;8CAGzC,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,+IAAA,CAAA,UAAO;4CAAC,WAAU;;;;;;sDACnB,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAG,WAAU;8DAAuB;;;;;;8DACrC,8OAAC;oDAAE,WAAU;oDAAuB,MAAK;8DAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAU3E;uCAEe"}},
    {"offset": {"line": 644, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 650, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/components/admin/content/reviews/ReviewsRating.tsx"],"sourcesContent":["import React from \"react\";\nimport { FaStar } from \"react-icons/fa6\";\n\ninterface ReviewsRatingProps {\n  rate: number;\n}\n\nconst ReviewsRating = ({ rate }: ReviewsRatingProps) => {\n  return (\n    <div className=\"flex gap-2 text-primary md:text-lg\">\n      {[...Array(rate)].map((_, index) => (\n        <FaStar key={index} />\n      ))}\n    </div>\n  );\n};\n\nexport default ReviewsRating;\n"],"names":[],"mappings":";;;;AACA;;;AAMA,MAAM,gBAAgB,CAAC,EAAE,IAAI,EAAsB;IACjD,qBACE,8OAAC;QAAI,WAAU;kBACZ;eAAI,MAAM;SAAM,CAAC,GAAG,CAAC,CAAC,GAAG,sBACxB,8OAAC,+IAAA,CAAA,SAAM,MAAM;;;;;;;;;;AAIrB;uCAEe"}},
    {"offset": {"line": 674, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 680, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/lib/server/actions.ts"],"sourcesContent":["\"use server\";\n\nimport {\n  createAdmin,\n  createServerClientInstance,\n} from \"@/utils/supabase/server\";\nimport { revalidatePath } from \"next/cache\";\nimport { redirect } from \"next/navigation\";\n\n//REGISTER\n\nexport async function createMember(data: {\n  email: string;\n  password: string;\n  role: \"editor\" | \"admin\";\n  name: string;\n}) {\n  const supabase = await createAdmin();\n\n  try {\n    const createResult = await supabase.auth.admin.createUser({\n      email: data.email,\n      password: data.password,\n      email_confirm: true,\n      user_metadata: {\n        role: data.role,\n      },\n    });\n\n    if (createResult.error) {\n      console.error(\"Failed to create user:\", createResult.error.message);\n      throw new Error(\"Failed to create user: \" + createResult.error.message);\n    }\n\n    console.log(\"User created:\", createResult.data.user);\n\n    const memberResult = await supabase\n      .from(\"members\")\n      .insert({ name: data.name, id: createResult.data.user?.id });\n\n    if (memberResult.error) {\n      console.error(\n        \"Failed to insert into members:\",\n        memberResult.error.message\n      );\n      throw new Error(\n        \"Failed to insert into members: \" + memberResult.error.message\n      );\n    }\n\n    console.log(\"Member inserted:\", memberResult.data);\n\n    const permissionsResult = await supabase\n      .from(\"permissions\")\n      .insert({ role: data.role, member_id: createResult.data.user?.id });\n\n    if (permissionsResult.error) {\n      console.error(\n        \"Failed to insert into permissions:\",\n        permissionsResult.error.message\n      );\n      throw new Error(\n        \"Failed to insert into permissions: \" + permissionsResult.error.message\n      );\n    }\n\n    console.log(\"Permissions inserted:\", permissionsResult.data);\n\n    return createResult.data.user;\n  } catch (err) {\n    console.error(\"Unexpected error during member creation:\", err);\n    throw err;\n  }\n}\n\n//LOGOUT\n\nexport async function signOut() {\n  const supabase = await createServerClientInstance();\n\n  await supabase.auth.signOut();\n\n  revalidatePath(\"/\", \"layout\");\n  redirect(\"/login\");\n}\n\n//USERS\n\nexport async function getAllUsers() {\n  const supabase = await createAdmin();\n\n  const {\n    data: { users },\n    error: fetchError,\n  } = await supabase.auth.admin.listUsers();\n\n  if (fetchError) {\n    throw new Error(\"Failed to fetch users: \" + fetchError.message);\n  }\n\n  const userIds = users.map((user) => user.id);\n  const { data: permissions, error: permissionsError } = await supabase\n    .from(\"permissions\")\n    .select(\"member_id, role\")\n    .in(\"member_id\", userIds);\n\n  if (permissionsError) {\n    throw new Error(\"Failed to fetch permissions: \" + permissionsError.message);\n  }\n\n  const { data: members, error: membersError } = await supabase\n    .from(\"members\")\n    .select(\"id, name\")\n    .in(\"id\", userIds);\n\n  if (membersError) {\n    throw new Error(\"Failed to fetch members: \" + membersError.message);\n  }\n\n  const usersWithRolesAndNames = users.map((user) => {\n    const userPermission = permissions.find(\n      (permission) => permission.member_id === user.id\n    );\n    const userName = members.find((member) => member.id === user.id)?.name;\n    return {\n      ...user,\n      role: userPermission ? userPermission.role : null,\n      name: userName || null,\n    };\n  });\n\n  return usersWithRolesAndNames || [];\n}\n\nexport async function deleteUser(userId: string) {\n  const supabase = await createAdmin();\n\n  try {\n    // Step 1: Delete user from Supabase Auth\n    const { error: deleteAuthError } = await supabase.auth.admin.deleteUser(\n      userId\n    );\n\n    if (deleteAuthError) {\n      console.error(\n        \"Failed to delete user from auth:\",\n        deleteAuthError.message\n      );\n      throw new Error(\n        \"Failed to delete user from auth: \" + deleteAuthError.message\n      );\n    }\n\n    console.log(\"User deleted from auth:\", userId);\n\n    // Step 2: Delete user from members table\n    const { error: deleteMemberError } = await supabase\n      .from(\"members\")\n      .delete()\n      .eq(\"id\", userId);\n\n    if (deleteMemberError) {\n      console.error(\n        \"Failed to delete user from members:\",\n        deleteMemberError.message\n      );\n      throw new Error(\n        \"Failed to delete user from members: \" + deleteMemberError.message\n      );\n    }\n\n    console.log(\"User deleted from members:\", userId);\n\n    // Step 3: Delete user from permissions table\n    const { error: deletePermissionError } = await supabase\n      .from(\"permissions\")\n      .delete()\n      .eq(\"member_id\", userId);\n\n    if (deletePermissionError) {\n      console.error(\n        \"Failed to delete user from permissions:\",\n        deletePermissionError.message\n      );\n      throw new Error(\n        \"Failed to delete user from permissions: \" +\n          deletePermissionError.message\n      );\n    }\n\n    console.log(\"User deleted from permissions:\", userId);\n\n    return { success: true };\n  } catch (err) {\n    console.error(\"Unexpected error during user deletion:\", err);\n    throw err;\n  }\n}\n\n// UPDATE USER\n\nexport async function updateUser(\n  userId: string,\n  data: { email?: string; password?: string; role?: string; name?: string }\n): Promise<void> {\n  const supabase = await createAdmin();\n\n  try {\n    // Update user in Supabase Auth\n    const { error: authError } = await supabase.auth.admin.updateUserById(\n      userId,\n      {\n        email: data.email,\n        password: data.password,\n      }\n    );\n\n    if (authError) {\n      throw new Error(`Failed to update user in auth: ${authError.message}`);\n    }\n\n    // Update user in members table\n    const { error: memberError } = await supabase\n      .from(\"members\")\n      .update({ name: data.name })\n      .eq(\"id\", userId);\n\n    if (memberError) {\n      throw new Error(\n        `Failed to update user in members: ${memberError.message}`\n      );\n    }\n\n    // Update user role in permissions table\n    if (data.role) {\n      const { error: permissionError } = await supabase\n        .from(\"permissions\")\n        .update({ role: data.role })\n        .eq(\"member_id\", userId);\n\n      if (permissionError) {\n        throw new Error(\n          `Failed to update user role: ${permissionError.message}`\n        );\n      }\n    }\n  } catch (error) {\n    console.error(\"Error in updateUser:\", error);\n    throw error;\n  }\n}\n// NEWS\n\nexport async function createNews(\n  title: string,\n  desc: string,\n  city: string,\n  formType: \"normal\" | \"beforeAfter\",\n  image?: File,\n  imageBefore?: File,\n  imageAfter?: File\n): Promise<void> {\n  const supabase = await createServerClientInstance();\n\n  try {\n    let imageUrl: string | null = null;\n    let imageBeforeUrl: string | null = null;\n    let imageAfterUrl: string | null = null;\n\n    const uploadFile = async (file: File, folder: string) => {\n      const fileExt = file.name.split(\".\").pop();\n      const fileName = `${Math.random().toString(36).substring(2)}.${fileExt}`;\n\n      const { data: userData, error: userError } =\n        await supabase.auth.getUser();\n      if (userError || !userData?.user) {\n        throw new Error(\"User not authenticated for photo upload\");\n      }\n\n      const filePath = `${folder}/${userData.user.id}/${fileName}`;\n\n      const { error: uploadError } = await supabase.storage\n        .from(\"news-images\")\n        .upload(filePath, file);\n\n      if (uploadError) {\n        throw new Error(`File upload failed: ${uploadError.message}`);\n      }\n\n      const { data } = await supabase.storage\n        .from(\"news-images\")\n        .getPublicUrl(filePath);\n\n      if (!data || !data.publicUrl) {\n        throw new Error(\"Failed to retrieve public URL\");\n      }\n\n      return data.publicUrl;\n    };\n\n    if (formType === \"normal\" && image) {\n      imageUrl = await uploadFile(image, \"normal\");\n    }\n\n    if (formType === \"beforeAfter\") {\n      if (imageBefore) {\n        imageBeforeUrl = await uploadFile(imageBefore, \"beforeAfter\");\n      }\n      if (imageAfter) {\n        imageAfterUrl = await uploadFile(imageAfter, \"beforeAfter\");\n      }\n    }\n\n    const { data: userData } = await supabase.auth.getUser();\n    if (!userData?.user) {\n      throw new Error(\"User not authenticated\");\n    }\n\n    const { error } = await supabase.from(\"news\").insert([\n      {\n        title,\n        desc,\n        city,\n        formType,\n        image: imageUrl,\n        imageBefore: imageBeforeUrl,\n        imageAfter: imageAfterUrl,\n        creator_id: userData.user.id,\n      },\n    ]);\n\n    if (error) {\n      throw new Error(`Failed to create news: ${error.message}`);\n    }\n  } catch (error) {\n    console.error(\"Error in createNews:\", error);\n    throw error;\n  }\n}\n\nexport async function updateNews(\n  id: number,\n  title: string,\n  desc: string,\n  city: string,\n  formType: \"normal\" | \"beforeAfter\",\n  image?: File,\n  imageBefore?: File,\n  imageAfter?: File\n): Promise<void> {\n  const supabase = await createServerClientInstance();\n\n  try {\n    let imageUrl: string | null = null;\n    let imageBeforeUrl: string | null = null;\n    let imageAfterUrl: string | null = null;\n\n    const uploadFile = async (file: File, folder: string) => {\n      const fileExt = file.name.split(\".\").pop();\n      const fileName = `${Math.random().toString(36).substring(2)}.${fileExt}`;\n\n      const { data: userData, error: userError } =\n        await supabase.auth.getUser();\n      if (userError || !userData?.user) {\n        throw new Error(\"User not authenticated for photo upload\");\n      }\n\n      const filePath = `${folder}/${userData.user.id}/${fileName}`;\n\n      const { error: uploadError } = await supabase.storage\n        .from(\"news-images\")\n        .upload(filePath, file);\n\n      if (uploadError) {\n        throw new Error(`File upload failed: ${uploadError.message}`);\n      }\n\n      const { data } = await supabase.storage\n        .from(\"news-images\")\n        .getPublicUrl(filePath);\n\n      if (!data || !data.publicUrl) {\n        throw new Error(\"Failed to retrieve public URL\");\n      }\n\n      return data.publicUrl;\n    };\n\n    if (formType === \"normal\" && image) {\n      imageUrl = await uploadFile(image, \"normal\");\n    } else {\n      const { data: existingNews } = await supabase\n        .from(\"news\")\n        .select(\"image\")\n        .eq(\"id\", id)\n        .single();\n      imageUrl = existingNews?.image || null;\n    }\n\n    if (formType === \"beforeAfter\") {\n      if (imageBefore) {\n        imageBeforeUrl = await uploadFile(imageBefore, \"beforeAfter\");\n      } else {\n        const { data: existingNews } = await supabase\n          .from(\"news\")\n          .select(\"imageBefore\")\n          .eq(\"id\", id)\n          .single();\n        imageBeforeUrl = existingNews?.imageBefore || null;\n      }\n      if (imageAfter) {\n        imageAfterUrl = await uploadFile(imageAfter, \"beforeAfter\");\n      } else {\n        const { data: existingNews } = await supabase\n          .from(\"news\")\n          .select(\"imageAfter\")\n          .eq(\"id\", id)\n          .single();\n        imageAfterUrl = existingNews?.imageAfter || null;\n      }\n    }\n\n    const { data: userData } = await supabase.auth.getUser();\n    if (!userData?.user) {\n      throw new Error(\"User not authenticated\");\n    }\n\n    const { error } = await supabase\n      .from(\"news\")\n      .update({\n        title,\n        desc,\n        city,\n        formType,\n        image: imageUrl,\n        imageBefore: imageBeforeUrl,\n        imageAfter: imageAfterUrl,\n        creator_id: userData.user.id,\n      })\n      .eq(\"id\", id);\n\n    if (error) {\n      throw new Error(`Failed to update news: ${error.message}`);\n    }\n  } catch (error) {\n    console.error(\"Error in updateNews:\", error);\n    throw error;\n  }\n}\n\nexport async function getAllNews(page: number = 1, limit: number = 6) {\n  const supabase = await createServerClientInstance();\n  const offset = (page - 1) * limit;\n\n  try {\n    const { data, count, error } = await supabase\n      .from(\"news\")\n      .select(\"*\", { count: \"exact\" }) // Sørg for at tælle det totale antal\n      .order(\"created_at\", { ascending: false })\n      .range(offset, offset + limit - 1);\n\n    if (error) {\n      throw new Error(`Failed to fetch news: ${error.message}`);\n    }\n\n    return { news: data, total: count || 0 };\n  } catch (err) {\n    console.error(\"Unexpected error during fetching news:\", err);\n    throw err;\n  }\n}\n\nexport async function getNewsById(newsId: number) {\n  const supabase = await createServerClientInstance();\n\n  try {\n    const { data, error } = await supabase\n      .from(\"news\")\n      .select(\"*\")\n      .eq(\"id\", newsId)\n      .single();\n\n    if (error) {\n      throw new Error(`Failed to fetch news by ID: ${error.message}`);\n    }\n\n    return data;\n  } catch (err) {\n    console.error(\"Unexpected error during fetching news by ID:\", err);\n    throw err;\n  }\n}\n\nexport async function deleteNews(newsId: number): Promise<void> {\n  const supabase = await createServerClientInstance();\n\n  try {\n    const { error } = await supabase.from(\"news\").delete().eq(\"id\", newsId);\n\n    if (error) {\n      throw new Error(`Failed to delete news: ${error.message}`);\n    }\n  } catch (error) {\n    console.error(\"Error in deleteNews:\", error);\n    throw error;\n  }\n}\n\n// REVIEWS\n\nexport async function createReview(\n  name: string,\n  city: string,\n  desc: string,\n  rate: number\n): Promise<void> {\n  const supabase = await createServerClientInstance();\n\n  try {\n    const { data: userData } = await supabase.auth.getUser();\n    if (!userData?.user) {\n      throw new Error(\"User not authenticated\");\n    }\n\n    const { error } = await supabase.from(\"reviews\").insert([\n      {\n        creator: userData.user.id,\n        name,\n        city,\n        desc,\n        rate,\n      },\n    ]);\n\n    if (error) {\n      throw new Error(`Failed to create review: ${error.message}`);\n    }\n  } catch (error) {\n    console.error(\"Error in createReview:\", error);\n    throw error;\n  }\n}\n\nexport async function getAllReviews(page: number = 1, limit: number = 6) {\n  const supabase = await createServerClientInstance();\n  const offset = (page - 1) * limit;\n\n  try {\n    const { data, count, error } = await supabase\n      .from(\"reviews\")\n      .select(\"*\", { count: \"exact\" })\n      .order(\"created_at\", { ascending: false })\n      .range(offset, offset + limit - 1);\n\n    if (error) {\n      throw new Error(`Failed to fetch reviews: ${error.message}`);\n    }\n\n    return { reviews: data, total: count || 0 };\n  } catch (err) {\n    console.error(\"Unexpected error during fetching reviews:\", err);\n    throw err;\n  }\n}\n\nexport async function deleteReview(reviewId: number): Promise<void> {\n  const supabase = await createServerClientInstance();\n\n  try {\n    const { error } = await supabase\n      .from(\"reviews\")\n      .delete()\n      .eq(\"id\", reviewId);\n\n    if (error) {\n      throw new Error(`Failed to delete review: ${error.message}`);\n    }\n  } catch (error) {\n    console.error(\"Error in deleteReview:\", error);\n    throw error;\n  }\n}\n\nexport async function getLatestReviews(limit: number = 10) {\n  const supabase = await createServerClientInstance();\n\n  try {\n    const { data, error } = await supabase\n      .from(\"reviews\")\n      .select(\"*\")\n      .order(\"created_at\", { ascending: false })\n      .limit(limit);\n\n    if (error) {\n      throw new Error(`Failed to fetch latest reviews: ${error.message}`);\n    }\n\n    return data;\n  } catch (err) {\n    console.error(\"Unexpected error during fetching latest reviews:\", err);\n    throw err;\n  }\n}\n\nexport async function updateReview(\n  reviewId: number,\n  name: string,\n  city: string,\n  desc: string,\n  rate: number\n): Promise<void> {\n  const supabase = await createServerClientInstance();\n\n  try {\n    const { error } = await supabase\n      .from(\"reviews\")\n      .update({ name, city, desc, rate })\n      .eq(\"id\", reviewId);\n\n    if (error) {\n      throw new Error(`Failed to update review: ${error.message}`);\n    }\n  } catch (error) {\n    console.error(\"Error in updateReview:\", error);\n    throw error;\n  }\n}\n\nexport async function getReviewById(reviewId: number) {\n  const supabase = await createServerClientInstance();\n\n  try {\n    const { data, error } = await supabase\n      .from(\"reviews\")\n      .select(\"*\")\n      .eq(\"id\", reviewId)\n      .single();\n\n    if (error) {\n      throw new Error(`Failed to fetch review by ID: ${error.message}`);\n    }\n\n    return data;\n  } catch (err) {\n    console.error(\"Unexpected error during fetching review by ID:\", err);\n    throw err;\n  }\n}\n\n// REQUESTS\n\nexport async function getAllRequests(page: number = 1, limit: number = 6) {\n  const supabase = await createServerClientInstance();\n  const offset = (page - 1) * limit;\n\n  try {\n    const { data, count, error } = await supabase\n      .from(\"requests\")\n      .select(\"*\", { count: \"exact\" })\n      .order(\"created_at\", { ascending: false })\n      .range(offset, offset + limit - 1);\n\n    if (error) {\n      throw new Error(`Failed to fetch requests: ${error.message}`);\n    }\n\n    return { requests: data, total: count || 0 };\n  } catch (err) {\n    console.error(\"Unexpected error during fetching requests:\", err);\n    throw err;\n  }\n}\n\nexport async function deleteRequest(requestId: string): Promise<void> {\n  const supabase = await createServerClientInstance();\n\n  try {\n    const { error } = await supabase\n      .from(\"requests\")\n      .delete()\n      .eq(\"id\", requestId);\n\n    if (error) {\n      throw new Error(`Failed to delete request: ${error.message}`);\n    }\n  } catch (error) {\n    console.error(\"Error in deleteRequest:\", error);\n    throw error;\n  }\n}\n\nexport async function updateRequest(\n  requestId: string,\n  data: {\n    name?: string;\n    category?: string;\n    mobile?: string;\n    mail?: string;\n    massage?: string;\n    address?: string;\n    city?: string;\n  }\n): Promise<void> {\n  const supabase = await createServerClientInstance();\n\n  try {\n    const { error } = await supabase\n      .from(\"requests\")\n      .update(data)\n      .eq(\"id\", requestId);\n\n    if (error) {\n      throw new Error(`Failed to update request: ${error.message}`);\n    }\n  } catch (error) {\n    console.error(\"Error in updateRequest:\", error);\n    throw error;\n  }\n}\n\nexport async function getRequestById(requestId: string) {\n  const supabase = await createServerClientInstance();\n\n  try {\n    const { data, error } = await supabase\n      .from(\"requests\")\n      .select(\"*\")\n      .eq(\"id\", requestId)\n      .single();\n\n    if (error) {\n      throw new Error(`Failed to fetch request by ID: ${error.message}`);\n    }\n\n    return data;\n  } catch (err) {\n    console.error(\"Unexpected error during fetching request by ID:\", err);\n    throw err;\n  }\n}\n\n// REQUEST NOTES\n\nexport async function createRequestNote(\n  desc: string,\n  requestId: string\n): Promise<{ id: string; desc: string; created_at: string }> {\n  const supabase = await createServerClientInstance();\n\n  try {\n    // Hent den autentificerede bruger\n    const { data: userData } = await supabase.auth.getUser();\n    if (!userData?.user) {\n      throw new Error(\"User not authenticated\");\n    }\n\n    // Indsæt noten og returner dataene\n    const { data, error } = await supabase\n      .from(\"notes\")\n      .insert([\n        {\n          desc: desc,\n          request_id: requestId,\n          creator_id: userData.user.id,\n        },\n      ])\n      .select(\"*\")\n      .single();\n\n    if (error) {\n      throw new Error(`Failed to create request note: ${error.message}`);\n    }\n\n    return data;\n  } catch (error) {\n    console.error(\"Error in createRequestNote:\", error);\n    throw error;\n  }\n}\n\nexport async function getNotesByRequestId(requestId: string) {\n  const supabase = await createServerClientInstance();\n\n  try {\n    const { data, error } = await supabase\n      .from(\"notes\")\n      .select(\"*\")\n      .eq(\"request_id\", requestId);\n\n    if (error) {\n      throw new Error(`Failed to fetch notes: ${error.message}`);\n    }\n\n    return data;\n  } catch (err) {\n    console.error(\"Unexpected error during fetching notes:\", err);\n    throw err;\n  }\n}\n\nexport async function deleteRequestNote(noteId: string): Promise<void> {\n  const supabase = await createServerClientInstance();\n\n  try {\n    const { error } = await supabase.from(\"notes\").delete().eq(\"id\", noteId);\n\n    if (error) {\n      throw new Error(`Failed to delete request note: ${error.message}`);\n    }\n  } catch (error) {\n    console.error(\"Error in deleteRequestNote:\", error);\n    throw error;\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;IAWsB;IAkEA;IAWA;IA8CA;IAmEA;IAoDA;IAuFA;IA8GA;IAsBA;IAqBA;IAiBA;IAiCA;IAsBA;IAkBA;IAqBA;IAwBA;IAuBA;IAsBA;IAkBA;IA6BA;IAuBA;IAqCA;IAoBA"}},
    {"offset": {"line": 730, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 736, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/components/client/home/Reviews.tsx"],"sourcesContent":["\"use client\";\n\nimport ReviewsRating from \"@/components/admin/content/reviews/ReviewsRating\";\nimport { getLatestReviews } from \"@/lib/server/actions\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaLocationDot } from \"react-icons/fa6\";\nimport { motion } from \"framer-motion\";\nimport Image from \"next/image\";\n\ninterface ReviewItem {\n  id: number;\n  name: string;\n  desc: string;\n  city: string;\n  rate: number;\n}\n\nconst Review = () => {\n  const [reviews, setReviews] = useState<ReviewItem[]>([]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const latestReviews: ReviewItem[] = await getLatestReviews(10);\n        setReviews(latestReviews);\n      } catch (error) {\n        console.error(\"Failed to fetch latest reviews:\", error);\n      }\n    };\n\n    fetchReviews();\n  }, []);\n\n  // Duplicer reviews for at skabe en uendelig effekt\n  const duplicatedReviews = [...reviews, ...reviews];\n\n  return (\n    <div className=\"w-full h-full p-2 sm:p-3 relative\">\n      <div className=\"w-full h-full overflow-hidden bg-secondary py-4 relative flex flex-col items-center justify-center gap-10 md:gap-16 rounded-lg\">\n        <h3 className=\"text-neutral-content text-2xl md:text-4xl font-bold\">\n          Anmeldelser fra kunder\n        </h3>\n        <div className=\"w-full overflow-hidden\">\n          <motion.div\n            className=\"flex space-x-4 md:space-x-4\"\n            initial={{ x: 0 }}\n            animate={{ x: [\"0%\", \"-100%\"] }}\n            transition={{ ease: \"linear\", duration: 30, repeat: Infinity }}\n          >\n            {duplicatedReviews.map((item, index) => (\n              <div\n                key={index}\n                className=\"card bg-base-100 card-compact shadow-lg rounded-md p-3 mx-4 min-w-[250px] md:min-w-[350px] md:h-[200px]\"\n              >\n                <div className=\"card-body p-5\">\n                  <ReviewsRating rate={item.rate} />\n                  <p className=\"text-xs md:text-lg\">{item.desc}</p>\n                  <h2 className=\"text-xs md:text-base font-bold flex items-center gap-1\">\n                    {item.name}, {item.city} <FaLocationDot />\n                  </h2>\n                </div>\n              </div>\n            ))}\n          </motion.div>\n        </div>\n      </div>\n      <div className=\"absolute -top-16 left-0 md:-top-40 md:left-16 p-4 w-24 md:w-52 h-auto\">\n        <Image src=\"/grass-reviews.png\" alt=\"græs\" width={200} height={200} />\n      </div>\n    </div>\n  );\n};\n\nexport default Review;\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAGA;AADA;AADA;AALA;;;;;;;;AAiBA,MAAM,SAAS;IACb,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAgB,EAAE;IAEvD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,eAAe;YACnB,IAAI;gBACF,MAAM,gBAA8B,MAAM,CAAA,GAAA,+HAAA,CAAA,mBAAgB,AAAD,EAAE;gBAC3D,WAAW;YACb,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,mCAAmC;YACnD;QACF;QAEA;IACF,GAAG,EAAE;IAEL,mDAAmD;IACnD,MAAM,oBAAoB;WAAI;WAAY;KAAQ;IAElD,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAsD;;;;;;kCAGpE,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;4BACT,WAAU;4BACV,SAAS;gCAAE,GAAG;4BAAE;4BAChB,SAAS;gCAAE,GAAG;oCAAC;oCAAM;iCAAQ;4BAAC;4BAC9B,YAAY;gCAAE,MAAM;gCAAU,UAAU;gCAAI,QAAQ;4BAAS;sCAE5D,kBAAkB,GAAG,CAAC,CAAC,MAAM,sBAC5B,8OAAC;oCAEC,WAAU;8CAEV,cAAA,8OAAC;wCAAI,WAAU;;0DACb,8OAAC,kKAAA,CAAA,UAAa;gDAAC,MAAM,KAAK,IAAI;;;;;;0DAC9B,8OAAC;gDAAE,WAAU;0DAAsB,KAAK,IAAI;;;;;;0DAC5C,8OAAC;gDAAG,WAAU;;oDACX,KAAK,IAAI;oDAAC;oDAAG,KAAK,IAAI;oDAAC;kEAAC,8OAAC,+IAAA,CAAA,gBAAa;;;;;;;;;;;;;;;;;mCAPtC;;;;;;;;;;;;;;;;;;;;;0BAef,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,6HAAA,CAAA,UAAK;oBAAC,KAAI;oBAAqB,KAAI;oBAAO,OAAO;oBAAK,QAAQ;;;;;;;;;;;;;;;;;AAIvE;uCAEe"}},
    {"offset": {"line": 894, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 900, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/components/client/home/News.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useEffect, useState } from \"react\";\nimport Image from \"next/image\";\nimport { getLatestNews } from \"@/lib/client/actions\";\nimport Link from \"next/link\";\n\ninterface NewsItem {\n  id: number;\n  title: string;\n  desc: string;\n  formType: \"normal\" | \"beforeAfter\";\n  image: string | null;\n  imageBefore: string | null;\n  imageAfter: string | null;\n}\n\nconst FALLBACK_IMAGE = \"/demo.webp\";\n\nconst News = () => {\n  const [news, setNews] = useState<NewsItem[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchNews = async () => {\n      try {\n        const latestNews = await getLatestNews();\n        setNews(latestNews);\n      } catch (error) {\n        console.error(\"Failed to fetch latest news:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchNews();\n  }, []);\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center gap-3 items-center\">\n        <span className=\"loading loading-spinner loading-md\"></span>\n        Indhenter data...\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-full h-full p-2 sm:p-3 relative\">\n      <div className=\"bg-secondary w-full h-full rounded-lg flex flex-col justify-center items-center gap-4 md:gap-10 overflow-hidden\">\n        <h2 className=\"text-2xl md:text-4xl font-bold text-neutral-content\">\n          Seneste nyheder\n        </h2>\n        <div className=\"flex flex-row gap-4 md:gap-10 p-4 md:p-10 carousel lg:justify-start carousel-center w-full space-x-2 overflow-x-auto \">\n          {news.map((item) => (\n            <article\n              key={item.id}\n              className=\"card card-compact h-auto w-[270px] sm:w-[400px] md:w-[600px] text-neutral-content carousel-item\"\n            >\n              <figure className=\"rounded-md  ring-1 md:ring-2 ring-neutral-content\">\n                {item.formType === \"beforeAfter\" ? (\n                  <div className=\"diff aspect-[16/9]\">\n                    <div className=\"diff-item-1\">\n                      <Image\n                        src={item.imageBefore || FALLBACK_IMAGE}\n                        alt={`${item.title} før`}\n                        width={500}\n                        height={300}\n                        style={{ objectFit: \"cover\" }}\n                      />\n                    </div>\n                    <div className=\"diff-item-2\">\n                      <Image\n                        src={item.imageAfter || FALLBACK_IMAGE}\n                        alt={`${item.title} efter`}\n                        width={500}\n                        height={300}\n                        style={{ objectFit: \"cover\" }}\n                      />\n                    </div>\n                    <div className=\"diff-resizer\"></div>\n                  </div>\n                ) : (\n                  <div className=\"relative w-full h-0 pb-[56.25%] overflow-hidden\">\n                    <Image\n                      src={item.image || FALLBACK_IMAGE}\n                      alt={item.title}\n                      fill\n                      sizes=\"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw\"\n                      style={{ objectFit: \"cover\" }}\n                    />\n                  </div>\n                )}\n              </figure>\n              <div className=\"card-body\">\n                <h2 className=\"card-title text-sm sm:text-base md:text-xl\">\n                  {item.title}\n                </h2>\n              </div>\n            </article>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"absolute -top-16 right-6 md:-top-24 md:right-16 p-4 w-36 md:w-52 h-auto\">\n        <Image src=\"/grass-news.png\" alt=\"græs\" width={200} height={200} />\n      </div>\n    </div>\n  );\n};\n\nexport default News;\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAiBA,MAAM,iBAAiB;AAEvB,MAAM,OAAO;IACX,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IAC/C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY;YAChB,IAAI;gBACF,MAAM,aAAa,MAAM,CAAA,GAAA,+HAAA,CAAA,gBAAa,AAAD;gBACrC,QAAQ;YACV,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,gCAAgC;YAChD,SAAU;gBACR,WAAW;YACb;QACF;QAEA;IACF,GAAG,EAAE;IAEL,IAAI,SAAS;QACX,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAK,WAAU;;;;;;gBAA4C;;;;;;;IAIlE;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAsD;;;;;;kCAGpE,8OAAC;wBAAI,WAAU;kCACZ,KAAK,GAAG,CAAC,CAAC,qBACT,8OAAC;gCAEC,WAAU;;kDAEV,8OAAC;wCAAO,WAAU;kDACf,KAAK,QAAQ,KAAK,8BACjB,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAI,WAAU;8DACb,cAAA,8OAAC,6HAAA,CAAA,UAAK;wDACJ,KAAK,KAAK,WAAW,IAAI;wDACzB,KAAK,GAAG,KAAK,KAAK,CAAC,IAAI,CAAC;wDACxB,OAAO;wDACP,QAAQ;wDACR,OAAO;4DAAE,WAAW;wDAAQ;;;;;;;;;;;8DAGhC,8OAAC;oDAAI,WAAU;8DACb,cAAA,8OAAC,6HAAA,CAAA,UAAK;wDACJ,KAAK,KAAK,UAAU,IAAI;wDACxB,KAAK,GAAG,KAAK,KAAK,CAAC,MAAM,CAAC;wDAC1B,OAAO;wDACP,QAAQ;wDACR,OAAO;4DAAE,WAAW;wDAAQ;;;;;;;;;;;8DAGhC,8OAAC;oDAAI,WAAU;;;;;;;;;;;iEAGjB,8OAAC;4CAAI,WAAU;sDACb,cAAA,8OAAC,6HAAA,CAAA,UAAK;gDACJ,KAAK,KAAK,KAAK,IAAI;gDACnB,KAAK,KAAK,KAAK;gDACf,IAAI;gDACJ,OAAM;gDACN,OAAO;oDAAE,WAAW;gDAAQ;;;;;;;;;;;;;;;;kDAKpC,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC;4CAAG,WAAU;sDACX,KAAK,KAAK;;;;;;;;;;;;+BAxCV,KAAK,EAAE;;;;;;;;;;;;;;;;0BAgDpB,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,6HAAA,CAAA,UAAK;oBAAC,KAAI;oBAAkB,KAAI;oBAAO,OAAO;oBAAK,QAAQ;;;;;;;;;;;;;;;;;AAIpE;uCAEe"}},
    {"offset": {"line": 1106, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}