{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/app/%28dashboard%29/admin/page.tsx"],"sourcesContent":["import React from \"react\";\n\nconst AdminPage = () => {\n  return <div>Overblik</div>;\n};\n\nexport default AdminPage;\n"],"names":[],"mappings":";;;;;AAEA,MAAM,YAAY;IAChB,qBAAO,8OAAC;kBAAI;;;;;;AACd;uCAEe"}},
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/utils/supabase/server.ts"],"sourcesContent":["import { createServerClient } from \"@supabase/ssr\";\nimport { cookies } from \"next/headers\";\nimport { createClient } from \"@supabase/supabase-js\";\n\nexport async function createServerClientInstance() {\n  const cookieStore = await cookies();\n\n  return createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        getAll() {\n          return cookieStore.getAll();\n        },\n        setAll(cookiesToSet) {\n          try {\n            cookiesToSet.forEach(({ name, value, options }) =>\n              cookieStore.set(name, value, options)\n            );\n          } catch {\n            // The `setAll` method was called from a Server Component.\n            // This can be ignored if you have middleware refreshing\n            // user sessions.\n          }\n        },\n      },\n    }\n  );\n}\n\nexport async function createAdmin() {\n  return createClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.SUPABASE_SERVICE_ROLE_KEY!,\n    {\n      auth: {\n        autoRefreshToken: false,\n        persistSession: false,\n      },\n    }\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AADA;AAEA;;;;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAEhC,OAAO,CAAA,GAAA,yKAAA,CAAA,qBAAkB,AAAD,sUAGtB;QACE,SAAS;YACP;gBACE,OAAO,YAAY,MAAM;YAC3B;YACA,QAAO,YAAY;gBACjB,IAAI;oBACF,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAC5C,YAAY,GAAG,CAAC,MAAM,OAAO;gBAEjC,EAAE,OAAM;gBACN,0DAA0D;gBAC1D,wDAAwD;gBACxD,iBAAiB;gBACnB;YACF;QACF;IACF;AAEJ;AAEO,eAAe;IACpB,OAAO,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,gFAEhB,QAAQ,GAAG,CAAC,yBAAyB,EACrC;QACE,MAAM;YACJ,kBAAkB;YAClB,gBAAgB;QAClB;IACF;AAEJ"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/lib/store/authStore.ts"],"sourcesContent":["import { create } from \"zustand\";\n\n// Definér typen for brugerens data\ninterface User {\n  id: string;\n  email: string | undefined;\n}\n\n// Definér Zustand state\ninterface AuthState {\n  user: User | null; // Brugerens data\n  role: \"admin\" | \"editor\" | null; // Brugerens rolle\n  setUser: (user: User) => void; // Sæt brugerdata\n  setRole: (role: \"admin\" | \"editor\") => void; // Sæt brugerrolle\n  clearSession: () => void; // Ryd session\n}\n\n// Opret Zustand-store\nexport const useAuthStore = create<AuthState>((set) => ({\n  user: null,\n  role: null,\n  setUser: (user) => set({ user }),\n  setRole: (role) => set({ role }),\n  clearSession: () => set({ user: null, role: null }),\n}));\n"],"names":[],"mappings":";;;AAAA;;AAkBO,MAAM,eAAe,CAAA,GAAA,wIAAA,CAAA,SAAM,AAAD,EAAa,CAAC,MAAQ,CAAC;QACtD,MAAM;QACN,MAAM;QACN,SAAS,CAAC,OAAS,IAAI;gBAAE;YAAK;QAC9B,SAAS,CAAC,OAAS,IAAI;gBAAE;YAAK;QAC9B,cAAc,IAAM,IAAI;gBAAE,MAAM;gBAAM,MAAM;YAAK;IACnD,CAAC"}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/lib/server/actions.ts"],"sourcesContent":["\"use server\";\n\nimport {\n  createAdmin,\n  createServerClientInstance,\n} from \"@/utils/supabase/server\";\nimport { revalidatePath } from \"next/cache\";\nimport { redirect } from \"next/navigation\";\nimport { useAuthStore } from \"../store/authStore\";\n\n//REGISTER\n\nexport async function createMember(data: {\n  email: string;\n  password: string;\n  role: \"editor\" | \"admin\";\n  name: string;\n}) {\n  const supabase = await createAdmin();\n\n  try {\n    const createResult = await supabase.auth.admin.createUser({\n      email: data.email,\n      password: data.password,\n      email_confirm: true,\n      user_metadata: {\n        role: data.role,\n      },\n    });\n\n    if (createResult.error) {\n      console.error(\"Failed to create user:\", createResult.error.message);\n      throw new Error(\"Failed to create user: \" + createResult.error.message);\n    }\n\n    console.log(\"User created:\", createResult.data.user);\n\n    const memberResult = await supabase\n      .from(\"members\")\n      .insert({ name: data.name, id: createResult.data.user?.id });\n\n    if (memberResult.error) {\n      console.error(\n        \"Failed to insert into members:\",\n        memberResult.error.message\n      );\n      throw new Error(\n        \"Failed to insert into members: \" + memberResult.error.message\n      );\n    }\n\n    console.log(\"Member inserted:\", memberResult.data);\n\n    const permissionsResult = await supabase\n      .from(\"permissions\")\n      .insert({ role: data.role, member_id: createResult.data.user?.id });\n\n    if (permissionsResult.error) {\n      console.error(\n        \"Failed to insert into permissions:\",\n        permissionsResult.error.message\n      );\n      throw new Error(\n        \"Failed to insert into permissions: \" + permissionsResult.error.message\n      );\n    }\n\n    console.log(\"Permissions inserted:\", permissionsResult.data);\n\n    return createResult.data.user;\n  } catch (err) {\n    console.error(\"Unexpected error during member creation:\", err);\n    throw err;\n  }\n}\n\n//LOGOUT\n\nexport async function signOut() {\n  const supabase = await createServerClientInstance();\n\n  await supabase.auth.signOut();\n\n  revalidatePath(\"/\", \"layout\");\n  redirect(\"/login\");\n}\n\n// ADMIN GET ALL USERS\n\nexport async function getAllUsers() {\n  const supabase = await createAdmin();\n\n  const {\n    data: { users },\n    error: fetchError,\n  } = await supabase.auth.admin.listUsers();\n\n  if (fetchError) {\n    throw new Error(\"Failed to fetch users: \" + fetchError.message);\n  }\n\n  return users || [];\n}\n\nexport async function readUserSession() {\n  const supabase = await createServerClientInstance();\n\n  try {\n    // Hent brugerdata fra Supabase session\n    const { data: userResponse, error: userError } =\n      await supabase.auth.getUser();\n\n    if (userError || !userResponse?.user) {\n      console.error(\"User fetch error:\", userError?.message || \"No user found\");\n      return null;\n    }\n\n    // Hent rolle direkte fra brugerens metadata\n    const role = userResponse.user.user_metadata?.role;\n\n    if (!role) {\n      console.error(\"Role not found in metadata\");\n      return null;\n    }\n\n    return {\n      user: userResponse.user,\n      role,\n    };\n  } catch (error) {\n    console.error(\"Unexpected error in readUserSession:\", error);\n    return null;\n  }\n}\n\nexport async function fetchAndSetUserSession() {\n  try {\n    const session = await readUserSession();\n\n    if (session) {\n      useAuthStore.getState().setUser({\n        id: session.user.id,\n        email: session.user.email,\n      });\n      useAuthStore.getState().setRole(session.role as \"admin\" | \"editor\");\n    } else {\n      useAuthStore.getState().clearSession();\n    }\n  } catch (error) {\n    console.error(\"Failed to fetch and set session:\", error);\n    useAuthStore.getState().clearSession();\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 278, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 284, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}