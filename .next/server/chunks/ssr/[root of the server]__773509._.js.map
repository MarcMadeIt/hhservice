{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/lib/server/actions.ts"],"sourcesContent":["\"use server\";\n\nimport {\n  createAdmin,\n  createServerClientInstance,\n} from \"@/utils/supabase/server\";\nimport { revalidatePath } from \"next/cache\";\nimport { redirect } from \"next/navigation\";\n\n//REGISTER\n\nexport async function createMember(data: {\n  email: string;\n  password: string;\n  role: \"editor\" | \"admin\";\n  name: string;\n}) {\n  const supabase = await createAdmin();\n\n  try {\n    const createResult = await supabase.auth.admin.createUser({\n      email: data.email,\n      password: data.password,\n      email_confirm: true,\n      user_metadata: {\n        role: data.role,\n      },\n    });\n\n    if (createResult.error) {\n      console.error(\"Failed to create user:\", createResult.error.message);\n      throw new Error(\"Failed to create user: \" + createResult.error.message);\n    }\n\n    console.log(\"User created:\", createResult.data.user);\n\n    const memberResult = await supabase\n      .from(\"members\")\n      .insert({ name: data.name, id: createResult.data.user?.id });\n\n    if (memberResult.error) {\n      console.error(\n        \"Failed to insert into members:\",\n        memberResult.error.message\n      );\n      throw new Error(\n        \"Failed to insert into members: \" + memberResult.error.message\n      );\n    }\n\n    console.log(\"Member inserted:\", memberResult.data);\n\n    const permissionsResult = await supabase\n      .from(\"permissions\")\n      .insert({ role: data.role, member_id: createResult.data.user?.id });\n\n    if (permissionsResult.error) {\n      console.error(\n        \"Failed to insert into permissions:\",\n        permissionsResult.error.message\n      );\n      throw new Error(\n        \"Failed to insert into permissions: \" + permissionsResult.error.message\n      );\n    }\n\n    console.log(\"Permissions inserted:\", permissionsResult.data);\n\n    return createResult.data.user;\n  } catch (err) {\n    console.error(\"Unexpected error during member creation:\", err);\n    throw err;\n  }\n}\n\n//LOGOUT\n\nexport async function signOut() {\n  const supabase = await createServerClientInstance();\n\n  await supabase.auth.signOut();\n\n  revalidatePath(\"/\", \"layout\");\n  redirect(\"/login\");\n}\n\n// ADMIN GET ALL USERS\n\nexport async function getAllUsers() {\n  const supabase = await createAdmin();\n\n  const {\n    data: { users },\n    error: fetchError,\n  } = await supabase.auth.admin.listUsers();\n\n  if (fetchError) {\n    throw new Error(\"Failed to fetch users: \" + fetchError.message);\n  }\n\n  return users || [];\n}\n\nexport async function readUserSession() {\n  const supabase = await createServerClientInstance();\n\n  // Trin 1: Hent brugerdata\n  const { data: userResponse, error: userError } =\n    await supabase.auth.getUser();\n\n  if (userError || !userResponse?.user) {\n    console.error(\n      \"User fetch error:\",\n      userError?.message || \"Ingen bruger fundet\"\n    );\n    return null;\n  }\n\n  const userId = userResponse.user.id;\n\n  // Trin 2: Hent medlemmet baseret pÃ¥ id\n  const { data: member, error: memberError } = await supabase\n    .from(\"members\")\n    .select(\"id, name\")\n    .eq(\"id\", userId) // Brug userId som id\n    .single();\n\n  if (memberError || !member) {\n    console.error(\n      \"Fejl ved hentning af medlem:\",\n      memberError?.message || \"Ingen medlem fundet\"\n    );\n    return null;\n  }\n\n  // Trin 3: Hent rollen fra permissions-tabellen\n  const { data: permission, error: permissionError } = await supabase\n    .from(\"permissions\")\n    .select(\"role\")\n    .eq(\"member_id\", member.id) // Brug member.id\n    .single();\n\n  if (permissionError || !permission) {\n    console.error(\n      \"Fejl ved hentning af rolle:\",\n      permissionError?.message || \"Ingen rolle fundet\"\n    );\n    return null;\n  }\n\n  return {\n    user: userResponse.user,\n    member,\n    role: permission.role,\n  };\n}\n"],"names":[],"mappings":";;;;;;;;IAWsB;IAkEA;IAWA;IAeA"}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/components/admin/layout/Topbar.tsx"],"sourcesContent":["\"use client\";\nimport { signOut } from \"@/lib/server/actions\";\nimport { usePathname } from \"next/navigation\";\nimport React from \"react\";\nimport { FaEllipsis } from \"react-icons/fa6\";\n\ninterface PageTitleMapping {\n  [key: string]: string;\n}\n\nconst Topbar = () => {\n  const pathname = usePathname();\n\n  const pageTitles: PageTitleMapping = {\n    \"/admin\": \"Overblik\",\n    \"/admin/content\": \"Indhold\",\n    \"/admin/settings\": \"Indstillinger\",\n  };\n\n  const currentTitle = pageTitles[pathname] || \"Unknown Page\";\n\n  return (\n    <div className=\"navbar bg-base-100 shadow-sm w-full rounded-md pl-5\">\n      <div className=\"flex-1\">\n        <a className=\"text-lg\">{currentTitle}</a>\n      </div>\n      <div className=\"flex-none\">\n        <div className=\"dropdown dropdown-bottom dropdown-end\">\n          <div tabIndex={0} role=\"button\" className=\"btn btn-ghost m-1\">\n            {\" \"}\n            <FaEllipsis />\n          </div>\n          <ul\n            tabIndex={0}\n            className=\"dropdown-content menu bg-base-100 rounded-box z-[1] w-52 p-2 shadow\"\n          >\n            <li>\n              <button onClick={signOut}>Log ud</button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Topbar;\n"],"names":[],"mappings":";;;;AACA;AACA;AAEA;AAJA;;;;;AAUA,MAAM,SAAS;IACb,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAE3B,MAAM,aAA+B;QACnC,UAAU;QACV,kBAAkB;QAClB,mBAAmB;IACrB;IAEA,MAAM,eAAe,UAAU,CAAC,SAAS,IAAI;IAE7C,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAE,WAAU;8BAAW;;;;;;;;;;;0BAE1B,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,UAAU;4BAAG,MAAK;4BAAS,WAAU;;gCACvC;8CACD,8OAAC,+IAAA,CAAA,aAAU;;;;;;;;;;;sCAEb,8OAAC;4BACC,UAAU;4BACV,WAAU;sCAEV,cAAA,8OAAC;0CACC,cAAA,8OAAC;oCAAO,SAAS,+HAAA,CAAA,UAAO;8CAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOxC;uCAEe"}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}