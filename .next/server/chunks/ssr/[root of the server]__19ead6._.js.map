{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/components/admin/layout/Navbar.tsx"],"sourcesContent":["\"use client\";\n\nimport Link from \"next/link\";\nimport { usePathname } from \"next/navigation\";\nimport React, { useEffect, useState } from \"react\";\nimport { getUserRole } from \"@/lib/server/actions\";\nimport { FaGear, FaHouse, FaList } from \"react-icons/fa6\";\n\nconst Navbar = () => {\n  // const pathname = usePathname();\n  // const [role, setRole] = useState<string | null>(null);\n\n  // useEffect(() => {\n  //   const fetchUserRole = async () => {\n  //     const { role } = await getUserRole();\n  //     console.log(\"Fetched user role:\", role);\n  //     setRole(role);\n  //   };\n\n  //   fetchUserRole();\n  // }, []);\n\n  return (\n    <div className=\"flex flex-col items-center justify-between  bg-base-100 rounded-lg md:fixed sm:h-full md:py-0 md:pr-0\">\n      <div className=\"flex flex-col md:gap-7 h-full \">\n        <div className=\"flex flex-col items-center justify-center h-24 w-full text-xl\">\n          <span className=\"font-bold\">ADMIN</span>\n          <span className=\"text-sm\">HH SERVICE</span>\n        </div>\n        <div className=\"hidden sm:flex\">\n          <ul className=\"menu gap-2 rounded-box w-56\">\n            <li>\n              <Link\n                className={pathname === \"/admin\" ? \"active\" : \"\"}\n                href=\"/admin\"\n              >\n                Overblik\n              </Link>\n            </li>\n            <li>\n              <Link\n                className={pathname === \"/admin/content\" ? \"active\" : \"\"}\n                href=\"/admin/content\"\n              >\n                Indhold\n              </Link>\n            </li>\n            {/* {role === \"admin\" && ( */}\n            <li>\n              <Link\n                className={pathname === \"/admin/settings\" ? \"active\" : \"\"}\n                href=\"/admin/settings\"\n              >\n                Indstillinger\n              </Link>\n            </li>\n            {/* )} */}\n          </ul>\n        </div>\n        <div className=\"flex flex-col items-center sm:hidden fixed bottom-0 left-1/2 transform -translate-x-1/2 w-full justify-center\">\n          <ul className=\"menu menu-horizontal menu-lg bg-base-200 rounded-box\">\n            <li>\n              <Link\n                href=\"/admin\"\n                className={pathname === \"/admin\" ? \"active\" : \"\"}\n              >\n                <FaHouse size={25} />\n              </Link>\n            </li>\n            <li>\n              <Link\n                href=\"/admin/content\"\n                className={pathname === \"/admin/content\" ? \"active\" : \"\"}\n              >\n                <FaList size={25} />\n              </Link>\n            </li>\n            {role === \"admin\" && (\n              <li>\n                <Link\n                  href=\"/admin/settings\"\n                  className={pathname === \"/admin/settings\" ? \"active\" : \"\"}\n                >\n                  <FaGear size={25} />\n                </Link>\n              </li>\n            )}\n          </ul>\n          <span className=\" text-[9px] flex items-center justify-center p-4\">\n            © Crafted by Marccode\n          </span>\n        </div>\n      </div>\n      <span className=\" text-[9px] hidden sm:flex items-center justify-center p-4\">\n        © Crafted by Marccode\n      </span>\n    </div>\n  );\n};\n\nexport default Navbar;\n"],"names":[],"mappings":";;;;AAEA;AAIA;AANA;;;;AAQA,MAAM,SAAS;IACb,kCAAkC;IAClC,yDAAyD;IAEzD,oBAAoB;IACpB,wCAAwC;IACxC,4CAA4C;IAC5C,+CAA+C;IAC/C,qBAAqB;IACrB,OAAO;IAEP,qBAAqB;IACrB,UAAU;IAEV,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAK,WAAU;0CAAY;;;;;;0CAC5B,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;kCAE5B,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAG,WAAU;;8CACZ,8OAAC;8CACC,cAAA,8OAAC,4JAAA,CAAA,UAAI;wCACH,WAAW,aAAa,WAAW,WAAW;wCAC9C,MAAK;kDACN;;;;;;;;;;;8CAIH,8OAAC;8CACC,cAAA,8OAAC,4JAAA,CAAA,UAAI;wCACH,WAAW,aAAa,mBAAmB,WAAW;wCACtD,MAAK;kDACN;;;;;;;;;;;8CAKH,8OAAC;8CACC,cAAA,8OAAC,4JAAA,CAAA,UAAI;wCACH,WAAW,aAAa,oBAAoB,WAAW;wCACvD,MAAK;kDACN;;;;;;;;;;;;;;;;;;;;;;kCAOP,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;;kDACZ,8OAAC;kDACC,cAAA,8OAAC,4JAAA,CAAA,UAAI;4CACH,MAAK;4CACL,WAAW,aAAa,WAAW,WAAW;sDAE9C,cAAA,8OAAC,+IAAA,CAAA,UAAO;gDAAC,MAAM;;;;;;;;;;;;;;;;kDAGnB,8OAAC;kDACC,cAAA,8OAAC,4JAAA,CAAA,UAAI;4CACH,MAAK;4CACL,WAAW,aAAa,mBAAmB,WAAW;sDAEtD,cAAA,8OAAC,+IAAA,CAAA,SAAM;gDAAC,MAAM;;;;;;;;;;;;;;;;oCAGjB,SAAS,yBACR,8OAAC;kDACC,cAAA,8OAAC,4JAAA,CAAA,UAAI;4CACH,MAAK;4CACL,WAAW,aAAa,oBAAoB,WAAW;sDAEvD,cAAA,8OAAC,+IAAA,CAAA,SAAM;gDAAC,MAAM;;;;;;;;;;;;;;;;;;;;;;0CAKtB,8OAAC;gCAAK,WAAU;0CAAmD;;;;;;;;;;;;;;;;;;0BAKvE,8OAAC;gBAAK,WAAU;0BAA6D;;;;;;;;;;;;AAKnF;uCAEe"}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 245, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/lib/server/actions.ts"],"sourcesContent":["\"use server\";\n\nimport { createClient } from \"@/utils/supabase/server\";\nimport { revalidatePath } from \"next/cache\";\nimport { redirect } from \"next/navigation\";\n\n//REGISTER\n\nexport async function createUser(\n  email: string,\n  password: string,\n  role: string = \"admin\"\n) {\n  // Await the result of createServerClientInstance\n  const supabase = await createClient();\n\n  // Step 1: Create a user without logging in\n  const { data, error } = await supabase.auth.signUp({\n    email,\n    password,\n  });\n\n  if (error) {\n    console.error(\"Error creating user:\", error); // Log the full error object\n    throw new Error(\"Failed to create user: \" + error.message);\n  }\n\n  const userId = data.user?.id;\n\n  if (!userId) {\n    throw new Error(\"Failed to retrieve user ID after creating user.\");\n  }\n\n  // Step 2: Create a profile in the `profiles` table\n  const { error: profileError } = await supabase\n    .from(\"profiles\")\n    .insert([{ id: userId, role: \"admin\" }]);\n\n  if (profileError) {\n    throw new Error(\"Failed to create profile: \" + profileError.message);\n  }\n\n  console.log(`Admin user ${email} created successfully.`);\n}\n\n//LOGOUT\n\nexport async function signOut() {\n  const supabase = await createClient();\n\n  await supabase.auth.signOut();\n\n  revalidatePath(\"/\", \"layout\");\n  redirect(\"/login\");\n}\n\n// ADMIN CHECK\n\nexport async function isAdmin() {\n  const supabase = await createClient();\n\n  const {\n    data: { user },\n    error: authError,\n  } = await supabase.auth.getUser();\n\n  if (authError) {\n    throw new Error(\"Failed to authenticate user: \" + authError.message);\n  }\n\n  if (!user) {\n    return false;\n  }\n\n  const { data: profile, error: profileError } = await supabase\n    .from(\"profiles\")\n    .select(\"role\")\n    .eq(\"id\", user.id)\n    .single();\n\n  if (profileError) {\n    throw new Error(\"Failed to fetch user role: \" + profileError.message);\n  }\n\n  return profile.role === \"admin\";\n}\n\n// ADMIN GET ALL USERS\n\nexport async function getAllUsers() {\n  const supabase = await createClient();\n\n  const admin = await isAdmin();\n\n  if (!admin) {\n    throw new Error(\"Unauthorized: Only admins can access this resource\");\n  }\n\n  // Hent alle brugere\n  const {\n    data: { users },\n    error: fetchError,\n  } = await supabase.auth.admin.listUsers();\n\n  if (fetchError) {\n    throw new Error(\"Failed to fetch users: \" + fetchError.message);\n  }\n\n  return users || [];\n}\n\nexport async function getUserRole() {\n  const supabase = await createClient();\n\n  const {\n    data: { user },\n    error: authError,\n  } = await supabase.auth.getUser();\n\n  if (authError) {\n    throw new Error(\"Failed to authenticate user: \" + authError.message);\n  }\n\n  if (!user) {\n    throw new Error(\"Unauthorized: No user logged in\");\n  }\n\n  const { data: profile, error: profileError } = await supabase\n    .from(\"profiles\")\n    .select(\"role\")\n    .eq(\"id\", user.id)\n    .single();\n\n  if (profileError) {\n    throw new Error(\"Failed to fetch user role: \" + profileError.message);\n  }\n\n  const role = profile.role;\n  const isAdmin = role === \"admin\";\n\n  return { role, isAdmin };\n}\n\nexport async function deleteUser(userId: string, requesterId: string) {\n  const supabase = await createClient();\n\n  // Check if the requester is an admin\n  const { data: profile, error: profileError } = await supabase\n    .from(\"profiles\")\n    .select(\"role\")\n    .eq(\"id\", requesterId)\n    .single();\n\n  if (profileError) {\n    throw new Error(\n      \"Failed to retrieve requester profile: \" + profileError.message\n    );\n  }\n\n  if (profile.role !== \"admin\") {\n    throw new Error(\"Only admins can delete users.\");\n  }\n\n  // Proceed with user deletion\n  const { error } = await supabase.auth.admin.deleteUser(userId);\n\n  if (error) {\n    console.error(\"Error deleting user:\", error.message);\n  } else {\n    console.log(\"User deleted successfully\");\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;IAQsB;IAuCA;IAWA;IA+BA;IAsBA;IAgCA"}},
    {"offset": {"line": 261, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 291, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/components/admin/layout/Topbar.tsx"],"sourcesContent":["\"use client\";\nimport { signOut } from \"@/lib/server/actions\";\nimport { usePathname } from \"next/navigation\";\nimport React from \"react\";\nimport { FaEllipsis } from \"react-icons/fa6\";\n\ninterface PageTitleMapping {\n  [key: string]: string;\n}\n\nconst Topbar = () => {\n  const pathname = usePathname();\n\n  const pageTitles: PageTitleMapping = {\n    \"/admin\": \"Overblik\",\n    \"/admin/content\": \"Indhold\",\n    \"/admin/settings\": \"Indstillinger\",\n  };\n\n  const currentTitle = pageTitles[pathname] || \"Unknown Page\";\n\n  return (\n    <div className=\"navbar bg-base-100 shadow-sm w-full rounded-md pl-5\">\n      <div className=\"flex-1\">\n        <a className=\"text-lg\">{currentTitle}</a>\n      </div>\n      <div className=\"flex-none\">\n        <div className=\"dropdown dropdown-bottom dropdown-end\">\n          <div tabIndex={0} role=\"button\" className=\"btn btn-ghost m-1\">\n            {\" \"}\n            <FaEllipsis />\n          </div>\n          <ul\n            tabIndex={0}\n            className=\"dropdown-content menu bg-base-100 rounded-box z-[1] w-52 p-2 shadow\"\n          >\n            <li>\n              <button onClick={signOut}>Log ud</button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Topbar;\n"],"names":[],"mappings":";;;;AACA;AACA;AAEA;AAJA;;;;;AAUA,MAAM,SAAS;IACb,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAE3B,MAAM,aAA+B;QACnC,UAAU;QACV,kBAAkB;QAClB,mBAAmB;IACrB;IAEA,MAAM,eAAe,UAAU,CAAC,SAAS,IAAI;IAE7C,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAE,WAAU;8BAAW;;;;;;;;;;;0BAE1B,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,UAAU;4BAAG,MAAK;4BAAS,WAAU;;gCACvC;8CACD,8OAAC,+IAAA,CAAA,aAAU;;;;;;;;;;;sCAEb,8OAAC;4BACC,UAAU;4BACV,WAAU;sCAEV,cAAA,8OAAC;0CACC,cAAA,8OAAC;oCAAO,SAAS,+HAAA,CAAA,UAAO;8CAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOxC;uCAEe"}},
    {"offset": {"line": 392, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}