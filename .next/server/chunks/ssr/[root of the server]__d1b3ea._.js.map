{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/components/admin/settings/NavSettings.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/admin/settings/NavSettings.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/admin/settings/NavSettings.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAiT,GAC9U,+EACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/components/admin/settings/NavSettings.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/admin/settings/NavSettings.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/admin/settings/NavSettings.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6R,GAC1T,2DACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/app/%28dashboard%29/admin/settings/page.tsx"],"sourcesContent":["import NavSettings from \"@/components/admin/settings/NavSettings\";\n\nconst Settings = () => {\n  return (\n    <div className=\"w-full\">\n      <NavSettings />\n    </div>\n  );\n};\n\nexport default Settings;\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,MAAM,WAAW;IACf,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,sJAAA,CAAA,UAAW;;;;;;;;;;AAGlB;uCAEe"}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/utils/supabase/server.ts"],"sourcesContent":["import { createServerClient } from \"@supabase/ssr\";\nimport { cookies } from \"next/headers\";\n\nexport async function createServerClientInstance() {\n  const cookieStore = await cookies();\n\n  return createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.SUPABASE_SERVICE_ROLE_KEY!, // Brug Service Role Key\n    {\n      cookies: {\n        getAll() {\n          return cookieStore.getAll();\n        },\n        setAll(cookiesToSet) {\n          try {\n            cookiesToSet.forEach(({ name, value, options }) =>\n              cookieStore.set(name, value, options)\n            );\n          } catch {\n            // Dette kan ignoreres, hvis kaldet ikke kr√¶ver session-cookies\n          }\n        },\n      },\n    }\n  );\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AADA;;;AAGO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAEhC,OAAO,CAAA,GAAA,yKAAA,CAAA,qBAAkB,AAAD,gFAEtB,QAAQ,GAAG,CAAC,yBAAyB,EACrC;QACE,SAAS;YACP;gBACE,OAAO,YAAY,MAAM;YAC3B;YACA,QAAO,YAAY;gBACjB,IAAI;oBACF,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAC5C,YAAY,GAAG,CAAC,MAAM,OAAO;gBAEjC,EAAE,OAAM;gBACN,+DAA+D;gBACjE;YACF;QACF;IACF;AAEJ"}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/utils/supabase/supabase.ts"],"sourcesContent":["import { createClient as createSupabaseClient } from \"@supabase/supabase-js\";\n\nexport function createClient() {\n  return createSupabaseClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n  );\n}\n\nexport function createAdminClient() {\n  const supabase = createSupabaseClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.SUPABASE_SERVICE_ROLE_KEY!,\n    {\n      auth: {\n        autoRefreshToken: false,\n        persistSession: false,\n      },\n    }\n  );\n\n  return supabase.auth.admin;\n}\n"],"names":[],"mappings":";;;;AAAA;;AAEO,SAAS;IACd,OAAO,CAAA,GAAA,uLAAA,CAAA,eAAoB,AAAD;AAI5B;AAEO,SAAS;IACd,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAoB,AAAD,gFAElC,QAAQ,GAAG,CAAC,yBAAyB,EACrC;QACE,MAAM;YACJ,kBAAkB;YAClB,gBAAgB;QAClB;IACF;IAGF,OAAO,SAAS,IAAI,CAAC,KAAK;AAC5B"}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/lib/server/actions.ts"],"sourcesContent":["\"use server\";\n\nimport { createServerClientInstance } from \"@/utils/supabase/server\";\nimport { createAdminClient } from \"@/utils/supabase/supabase\";\nimport { revalidatePath } from \"next/cache\";\nimport { redirect } from \"next/navigation\";\n\n//REGISTER\n\nexport async function createUser(\n  email: string,\n  password: string,\n  role: string = \"admin\"\n) {\n  // Await the result of createAdminClient\n  const supabase = createAdminClient();\n\n  // Step 1: Create a user without logging in\n  const { data, error } = await supabase.createUser({\n    email,\n    password,\n    email_confirm: true,\n    user_metadata: { role }, // Use the role parameter\n  });\n\n  if (error) {\n    console.error(\"Error creating user:\", error); // Log the full error object\n    throw new Error(\"Failed to create user: \" + error.message);\n  }\n\n  const userId = data.user?.id;\n\n  if (!userId) {\n    throw new Error(\"Failed to retrieve user ID after creating user.\");\n  }\n\n  // Step 2: Create a profile in the `profiles` table\n  const { error: profileError } = await supabase\n    .from(\"profiles\")\n    .insert([{ id: userId, role }]);\n\n  if (profileError) {\n    throw new Error(\"Failed to create profile: \" + profileError.message);\n  }\n\n  console.log(`Admin user ${email} created successfully.`);\n}\n\n//LOGOUT\n\nexport async function signOut() {\n  const supabase = await createServerClientInstance();\n\n  await supabase.auth.signOut();\n\n  revalidatePath(\"/\", \"layout\");\n  redirect(\"/login\");\n}\n\n// ADMIN CHECK\n\nexport async function isAdmin() {\n  const supabase = await createServerClientInstance();\n\n  const {\n    data: { user },\n    error: authError,\n  } = await supabase.auth.getUser();\n\n  if (authError) {\n    throw new Error(\"Failed to authenticate user: \" + authError.message);\n  }\n\n  if (!user) {\n    return false;\n  }\n\n  const { data: profile, error: profileError } = await supabase\n    .from(\"profiles\")\n    .select(\"role\")\n    .eq(\"id\", user.id)\n    .single();\n\n  if (profileError) {\n    throw new Error(\"Failed to fetch user role: \" + profileError.message);\n  }\n\n  return profile.role === \"admin\";\n}\n\n// ADMIN GET ALL USERS\n\nexport async function getAllUsers() {\n  const supabase = await createServerClientInstance();\n\n  const admin = await isAdmin();\n\n  if (!admin) {\n    throw new Error(\"Unauthorized: Only admins can access this resource\");\n  }\n\n  // Hent alle brugere\n  const {\n    data: { users },\n    error: fetchError,\n  } = await supabase.auth.admin.listUsers();\n\n  if (fetchError) {\n    throw new Error(\"Failed to fetch users: \" + fetchError.message);\n  }\n\n  return users || [];\n}\n\nexport async function getUserRole() {\n  const supabase = await createServerClientInstance();\n\n  const {\n    data: { user },\n    error: authError,\n  } = await supabase.auth.getUser();\n\n  if (authError) {\n    throw new Error(\"Failed to authenticate user: \" + authError.message);\n  }\n\n  if (!user) {\n    throw new Error(\"Unauthorized: No user logged in\");\n  }\n\n  const { data: profile, error: profileError } = await supabase\n    .from(\"profiles\")\n    .select(\"role\")\n    .eq(\"id\", user.id)\n    .single();\n\n  if (profileError) {\n    throw new Error(\"Failed to fetch user role: \" + profileError.message);\n  }\n\n  const role = profile.role;\n  const isAdmin = role === \"admin\";\n\n  return { role, isAdmin };\n}\n\nexport async function deleteUser(userId: string, requesterId: string) {\n  const supabase = await createServerClientInstance();\n\n  // Check if the requester is an admin\n  const { data: profile, error: profileError } = await supabase\n    .from(\"profiles\")\n    .select(\"role\")\n    .eq(\"id\", requesterId)\n    .single();\n\n  if (profileError) {\n    throw new Error(\n      \"Failed to retrieve requester profile: \" + profileError.message\n    );\n  }\n\n  if (profile.role !== \"admin\") {\n    throw new Error(\"Only admins can delete users.\");\n  }\n\n  // Proceed with user deletion\n  const { error } = await supabase.auth.admin.deleteUser(userId);\n\n  if (error) {\n    console.error(\"Error deleting user:\", error.message);\n  } else {\n    console.log(\"User deleted successfully\");\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 315, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 328, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}