{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/utils/supabase/server.ts"],"sourcesContent":["import { createServerClient } from \"@supabase/ssr\";\nimport { cookies } from \"next/headers\";\nimport { createClient } from \"@supabase/supabase-js\";\n\nexport async function createServerClientInstance() {\n  const cookieStore = await cookies();\n\n  return createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        getAll() {\n          return cookieStore.getAll();\n        },\n        setAll(cookiesToSet) {\n          try {\n            cookiesToSet.forEach(({ name, value, options }) =>\n              cookieStore.set(name, value, options)\n            );\n          } catch {\n            // The `setAll` method was called from a Server Component.\n            // This can be ignored if you have middleware refreshing\n            // user sessions.\n          }\n        },\n      },\n    }\n  );\n}\n\nexport async function createAdmin() {\n  return createClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.SUPABASE_SERVICE_ROLE_KEY!,\n    {\n      auth: {\n        autoRefreshToken: false,\n        persistSession: false,\n      },\n    }\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AADA;AAEA;;;;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAEhC,OAAO,CAAA,GAAA,yKAAA,CAAA,qBAAkB,AAAD,sUAGtB;QACE,SAAS;YACP;gBACE,OAAO,YAAY,MAAM;YAC3B;YACA,QAAO,YAAY;gBACjB,IAAI;oBACF,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAC5C,YAAY,GAAG,CAAC,MAAM,OAAO;gBAEjC,EAAE,OAAM;gBACN,0DAA0D;gBAC1D,wDAAwD;gBACxD,iBAAiB;gBACnB;YACF;QACF;IACF;AAEJ;AAEO,eAAe;IACpB,OAAO,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,gFAEhB,QAAQ,GAAG,CAAC,yBAAyB,EACrC;QACE,MAAM;YACJ,kBAAkB;YAClB,gBAAgB;QAClB;IACF;AAEJ"}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/app/%28dashboard%29/admin/content/actions.ts"],"sourcesContent":["\"use server\";\n\nimport { createServerClientInstance } from \"@/utils/supabase/server\";\n\nexport async function setNewNews() {\n  try {\n    const supabase = await createServerClientInstance();\n\n    const { data, error } = await supabase\n      .from(\"news\")\n      .insert({ title: \"New news\" });\n\n    if (error) {\n      console.error(\"Error inserting news:\", error.message);\n    } else {\n      console.log(\"News inserted:\", data);\n    }\n  } catch (err) {\n    console.error(\"Unexpected error:\", err);\n  }\n}\n"],"names":[],"mappings":";;;;;AAEA;;;;;AAEO,eAAe,uCAAQ,GAAR;IACpB,IAAI;QACF,MAAM,WAAW,MAAM,CAAA,GAAA,kIAAA,CAAA,6BAA0B,AAAD;QAEhD,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,QACL,MAAM,CAAC;YAAE,OAAO;QAAW;QAE9B,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,yBAAyB,MAAM,OAAO;QACtD,OAAO;YACL,QAAQ,GAAG,CAAC,kBAAkB;QAChC;IACF,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,qBAAqB;IACrC;AACF;;;IAhBsB;;AAAA,+OAAA"}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/app/%28dashboard%29/admin/content/page.tsx"],"sourcesContent":["import React from \"react\";\nimport { setNewNews } from \"./actions\";\n\nconst Content = () => {\n  return (\n    <div>\n      <button onClick={setNewNews}>Add News</button>\n    </div>\n  );\n};\n\nexport default Content;\n"],"names":[],"mappings":";;;;AACA;;;AAEA,MAAM,UAAU;IACd,qBACE,8OAAC;kBACC,cAAA,8OAAC;YAAO,SAAS,0JAAA,CAAA,aAAU;sBAAE;;;;;;;;;;;AAGnC;uCAEe"}},
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/lib/server/actions.ts"],"sourcesContent":["\"use server\";\n\nimport {\n  createAdmin,\n  createServerClientInstance,\n} from \"@/utils/supabase/server\";\nimport { revalidatePath } from \"next/cache\";\nimport { redirect } from \"next/navigation\";\n\n//REGISTER\n\nexport async function createMember(data: {\n  email: string;\n  password: string;\n  role: \"editor\" | \"admin\";\n  name: string;\n}) {\n  const supabase = await createAdmin();\n\n  try {\n    const createResult = await supabase.auth.admin.createUser({\n      email: data.email,\n      password: data.password,\n      email_confirm: true,\n      user_metadata: {\n        role: data.role,\n      },\n    });\n\n    if (createResult.error) {\n      console.error(\"Failed to create user:\", createResult.error.message);\n      throw new Error(\"Failed to create user: \" + createResult.error.message);\n    }\n\n    console.log(\"User created:\", createResult.data.user);\n\n    const memberResult = await supabase\n      .from(\"members\")\n      .insert({ name: data.name, id: createResult.data.user?.id });\n\n    if (memberResult.error) {\n      console.error(\n        \"Failed to insert into members:\",\n        memberResult.error.message\n      );\n      throw new Error(\n        \"Failed to insert into members: \" + memberResult.error.message\n      );\n    }\n\n    console.log(\"Member inserted:\", memberResult.data);\n\n    const permissionsResult = await supabase\n      .from(\"permissions\")\n      .insert({ role: data.role, member_id: createResult.data.user?.id });\n\n    if (permissionsResult.error) {\n      console.error(\n        \"Failed to insert into permissions:\",\n        permissionsResult.error.message\n      );\n      throw new Error(\n        \"Failed to insert into permissions: \" + permissionsResult.error.message\n      );\n    }\n\n    console.log(\"Permissions inserted:\", permissionsResult.data);\n\n    return createResult.data.user;\n  } catch (err) {\n    console.error(\"Unexpected error during member creation:\", err);\n    throw err;\n  }\n}\n\n//LOGOUT\n\nexport async function signOut() {\n  const supabase = await createServerClientInstance();\n\n  await supabase.auth.signOut();\n\n  revalidatePath(\"/\", \"layout\");\n  redirect(\"/login\");\n}\n\n// ADMIN GET ALL USERS\n\nexport async function getAllUsers() {\n  const supabase = await createAdmin();\n\n  const {\n    data: { users },\n    error: fetchError,\n  } = await supabase.auth.admin.listUsers();\n\n  if (fetchError) {\n    throw new Error(\"Failed to fetch users: \" + fetchError.message);\n  }\n\n  return users || [];\n}\n\nexport async function readUserSession() {\n  const supabase = await createServerClientInstance();\n\n  // Hent brugerdata via Supabase Auth server\n  const { data, error } = await supabase.auth.getUser();\n\n  if (error || !data.user) {\n    console.error(\"User fetch error:\", error?.message || \"Ingen bruger fundet\");\n    return null;\n  }\n\n  // Hent brugerens ID\n  const userId = data.user.id;\n\n  if (!userId) {\n    console.error(\"Ingen bruger-ID fundet!\");\n    return null;\n  }\n\n  // Hent rollen fra permissions-tabellen\n  const { data: permission, error: permissionError } = await supabase\n    .from(\"permissions\")\n    .select(\"role\")\n    .eq(\"member_id\", userId)\n    .single();\n\n  if (permissionError || !permission) {\n    console.error(\"Fejl ved hentning af rolle:\", permissionError?.message);\n    return null;\n  }\n\n  return {\n    user: data.user,\n    role: permission.role, // Brug rollen fra permissions-tabellen\n  };\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}