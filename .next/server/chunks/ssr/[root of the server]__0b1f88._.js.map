{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/components/admin/settings/NavSettings.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/admin/settings/NavSettings.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/admin/settings/NavSettings.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAiT,GAC9U,+EACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/components/admin/settings/NavSettings.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/admin/settings/NavSettings.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/admin/settings/NavSettings.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6R,GAC1T,2DACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/app/%28dashboard%29/admin/settings/page.tsx"],"sourcesContent":["import ProtectSettingsRoute from \"@/components/admin/auth/ProtectedRoute\";\nimport NavSettings from \"@/components/admin/settings/NavSettings\";\n\nconst Settings = () => {\n  return (\n    <ProtectSettingsRoute>\n      <div className=\"w-full\">\n        <NavSettings />\n      </div>\n    </ProtectSettingsRoute>\n  );\n};\n\nexport default Settings;\n"],"names":[],"mappings":";;;;;;;;;AACA;;;;AAEA,MAAM,WAAW;IACf,qBACE,8OAAC;kBACC,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC,sJAAA,CAAA,UAAW;;;;;;;;;;;;;;;AAIpB;uCAEe"}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/utils/supabase/server.ts"],"sourcesContent":["import { createServerClient } from \"@supabase/ssr\";\nimport { cookies } from \"next/headers\";\nimport { createClient } from \"@supabase/supabase-js\";\n\nexport async function createServerClientInstance() {\n  const cookieStore = await cookies();\n\n  return createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        getAll() {\n          return cookieStore.getAll();\n        },\n        setAll(cookiesToSet) {\n          try {\n            cookiesToSet.forEach(({ name, value, options }) =>\n              cookieStore.set(name, value, options)\n            );\n          } catch {\n            // The `setAll` method was called from a Server Component.\n            // This can be ignored if you have middleware refreshing\n            // user sessions.\n          }\n        },\n      },\n    }\n  );\n}\n\nexport async function createAdmin() {\n  return createClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.SUPABASE_SERVICE_ROLE_KEY!,\n    {\n      auth: {\n        autoRefreshToken: false,\n        persistSession: false,\n      },\n    }\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AADA;AAEA;;;;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAEhC,OAAO,CAAA,GAAA,yKAAA,CAAA,qBAAkB,AAAD,sUAGtB;QACE,SAAS;YACP;gBACE,OAAO,YAAY,MAAM;YAC3B;YACA,QAAO,YAAY;gBACjB,IAAI;oBACF,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAC5C,YAAY,GAAG,CAAC,MAAM,OAAO;gBAEjC,EAAE,OAAM;gBACN,0DAA0D;gBAC1D,wDAAwD;gBACxD,iBAAiB;gBACnB;YACF;QACF;IACF;AAEJ;AAEO,eAAe;IACpB,OAAO,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,gFAEhB,QAAQ,GAAG,CAAC,yBAAyB,EACrC;QACE,MAAM;YACJ,kBAAkB;YAClB,gBAAgB;QAClB;IACF;AAEJ"}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/lib/server/actions.ts"],"sourcesContent":["\"use server\";\n\nimport {\n  createAdmin,\n  createServerClientInstance,\n} from \"@/utils/supabase/server\";\nimport { revalidatePath } from \"next/cache\";\nimport { redirect } from \"next/navigation\";\n\n//REGISTER\n\nexport async function createMember(data: {\n  email: string;\n  password: string;\n  role: \"editor\" | \"admin\";\n  name: string;\n}) {\n  const supabase = await createAdmin();\n\n  try {\n    const createResult = await supabase.auth.admin.createUser({\n      email: data.email,\n      password: data.password,\n      email_confirm: true,\n      user_metadata: {\n        role: data.role,\n      },\n    });\n\n    if (createResult.error) {\n      console.error(\"Failed to create user:\", createResult.error.message);\n      throw new Error(\"Failed to create user: \" + createResult.error.message);\n    }\n\n    console.log(\"User created:\", createResult.data.user);\n\n    const memberResult = await supabase\n      .from(\"members\")\n      .insert({ name: data.name, id: createResult.data.user?.id });\n\n    if (memberResult.error) {\n      console.error(\n        \"Failed to insert into members:\",\n        memberResult.error.message\n      );\n      throw new Error(\n        \"Failed to insert into members: \" + memberResult.error.message\n      );\n    }\n\n    console.log(\"Member inserted:\", memberResult.data);\n\n    const permissionsResult = await supabase\n      .from(\"permissions\")\n      .insert({ role: data.role, member_id: createResult.data.user?.id });\n\n    if (permissionsResult.error) {\n      console.error(\n        \"Failed to insert into permissions:\",\n        permissionsResult.error.message\n      );\n      throw new Error(\n        \"Failed to insert into permissions: \" + permissionsResult.error.message\n      );\n    }\n\n    console.log(\"Permissions inserted:\", permissionsResult.data);\n\n    return createResult.data.user;\n  } catch (err) {\n    console.error(\"Unexpected error during member creation:\", err);\n    throw err;\n  }\n}\n\n//LOGOUT\n\nexport async function signOut() {\n  const supabase = await createServerClientInstance();\n\n  await supabase.auth.signOut();\n\n  revalidatePath(\"/\", \"layout\");\n  redirect(\"/login\");\n}\n\n// ADMIN GET ALL USERS\n\nexport async function getAllUsers() {\n  const supabase = await createAdmin();\n\n  const {\n    data: { users },\n    error: fetchError,\n  } = await supabase.auth.admin.listUsers();\n\n  if (fetchError) {\n    throw new Error(\"Failed to fetch users: \" + fetchError.message);\n  }\n\n  const userIds = users.map((user) => user.id);\n  const { data: permissions, error: permissionsError } = await supabase\n    .from(\"permissions\")\n    .select(\"member_id, role\")\n    .in(\"member_id\", userIds);\n\n  if (permissionsError) {\n    throw new Error(\"Failed to fetch permissions: \" + permissionsError.message);\n  }\n\n  const usersWithRoles = users.map((user) => {\n    const userPermission = permissions.find(\n      (permission) => permission.member_id === user.id\n    );\n    return {\n      ...user,\n      role: userPermission ? userPermission.role : null,\n    };\n  });\n\n  return usersWithRoles || [];\n}\n\n// DELETE USER\n\nexport async function deleteUser(userId: string) {\n  const supabase = await createAdmin();\n\n  try {\n    // Step 1: Delete user from Supabase Auth\n    const { error: deleteAuthError } = await supabase.auth.admin.deleteUser(\n      userId\n    );\n\n    if (deleteAuthError) {\n      console.error(\n        \"Failed to delete user from auth:\",\n        deleteAuthError.message\n      );\n      throw new Error(\n        \"Failed to delete user from auth: \" + deleteAuthError.message\n      );\n    }\n\n    console.log(\"User deleted from auth:\", userId);\n\n    // Step 2: Delete user from members table\n    const { error: deleteMemberError } = await supabase\n      .from(\"members\")\n      .delete()\n      .eq(\"id\", userId);\n\n    if (deleteMemberError) {\n      console.error(\n        \"Failed to delete user from members:\",\n        deleteMemberError.message\n      );\n      throw new Error(\n        \"Failed to delete user from members: \" + deleteMemberError.message\n      );\n    }\n\n    console.log(\"User deleted from members:\", userId);\n\n    // Step 3: Delete user from permissions table\n    const { error: deletePermissionError } = await supabase\n      .from(\"permissions\")\n      .delete()\n      .eq(\"member_id\", userId);\n\n    if (deletePermissionError) {\n      console.error(\n        \"Failed to delete user from permissions:\",\n        deletePermissionError.message\n      );\n      throw new Error(\n        \"Failed to delete user from permissions: \" +\n          deletePermissionError.message\n      );\n    }\n\n    console.log(\"User deleted from permissions:\", userId);\n\n    return { success: true };\n  } catch (err) {\n    console.error(\"Unexpected error during user deletion:\", err);\n    throw err;\n  }\n}\n\nexport async function createNews(\n  title: string,\n  desc: string,\n  city: string,\n  formType: \"normal\" | \"beforeAfter\",\n  image?: File,\n  imageBefore?: File,\n  imageAfter?: File\n): Promise<void> {\n  const supabase = await createServerClientInstance();\n\n  try {\n    let imageUrl: string | null = null;\n    let imageBeforeUrl: string | null = null;\n    let imageAfterUrl: string | null = null;\n\n    const uploadFile = async (file: File, folder: string) => {\n      const fileExt = file.name.split(\".\").pop();\n      const fileName = `${Math.random().toString(36).substring(2)}.${fileExt}`;\n\n      const { data: userData, error: userError } =\n        await supabase.auth.getUser();\n      if (userError || !userData?.user) {\n        throw new Error(\"User not authenticated for photo upload\");\n      }\n\n      const filePath = `${folder}/${userData.user.id}/${fileName}`;\n\n      const { error: uploadError } = await supabase.storage\n        .from(\"news-images\")\n        .upload(filePath, file);\n\n      if (uploadError) {\n        throw new Error(`File upload failed: ${uploadError.message}`);\n      }\n\n      const { data } = await supabase.storage\n        .from(\"news-images\")\n        .getPublicUrl(filePath);\n\n      if (!data || !data.publicUrl) {\n        throw new Error(\"Failed to retrieve public URL\");\n      }\n\n      console.log(\"Generated Public URL:\", data.publicUrl); // Debug log\n      return data.publicUrl;\n    };\n\n    if (formType === \"normal\" && image) {\n      imageUrl = await uploadFile(image, \"normal\");\n    }\n\n    if (formType === \"beforeAfter\") {\n      if (imageBefore) {\n        imageBeforeUrl = await uploadFile(imageBefore, \"beforeAfter\");\n      }\n      if (imageAfter) {\n        imageAfterUrl = await uploadFile(imageAfter, \"beforeAfter\");\n      }\n    }\n\n    const { data: userData } = await supabase.auth.getUser();\n    if (!userData?.user) {\n      throw new Error(\"User not authenticated\");\n    }\n\n    const { error } = await supabase.from(\"news\").insert([\n      {\n        title,\n        desc,\n        city,\n        formType,\n        image: imageUrl,\n        imageBefore: imageBeforeUrl,\n        imageAfter: imageAfterUrl,\n        creator_id: userData.user.id,\n      },\n    ]);\n\n    if (error) {\n      throw new Error(`Failed to create news: ${error.message}`);\n    }\n  } catch (error) {\n    console.error(\"Error in createNews:\", error);\n    throw error;\n  }\n}\n\nexport async function updateNews(\n  id: number,\n  title: string,\n  desc: string,\n  city: string,\n  formType: \"normal\" | \"beforeAfter\",\n  image?: File,\n  imageBefore?: File,\n  imageAfter?: File\n): Promise<void> {\n  const supabase = await createServerClientInstance();\n\n  try {\n    let imageUrl: string | null = null;\n    let imageBeforeUrl: string | null = null;\n    let imageAfterUrl: string | null = null;\n\n    const uploadFile = async (file: File, folder: string) => {\n      const fileExt = file.name.split(\".\").pop();\n      const fileName = `${Math.random().toString(36).substring(2)}.${fileExt}`;\n\n      const { data: userData, error: userError } =\n        await supabase.auth.getUser();\n      if (userError || !userData?.user) {\n        throw new Error(\"User not authenticated for photo upload\");\n      }\n\n      const filePath = `${folder}/${userData.user.id}/${fileName}`;\n\n      const { error: uploadError } = await supabase.storage\n        .from(\"news-images\")\n        .upload(filePath, file);\n\n      if (uploadError) {\n        throw new Error(`File upload failed: ${uploadError.message}`);\n      }\n\n      const { data } = await supabase.storage\n        .from(\"news-images\")\n        .getPublicUrl(filePath);\n\n      if (!data || !data.publicUrl) {\n        throw new Error(\"Failed to retrieve public URL\");\n      }\n\n      console.log(\"Generated Public URL:\", data.publicUrl); // Debug log\n      return data.publicUrl;\n    };\n\n    if (formType === \"normal\" && image) {\n      imageUrl = await uploadFile(image, \"normal\");\n    } else {\n      const { data: existingNews } = await supabase\n        .from(\"news\")\n        .select(\"image\")\n        .eq(\"id\", id)\n        .single();\n      imageUrl = existingNews?.image || null;\n    }\n\n    if (formType === \"beforeAfter\") {\n      if (imageBefore) {\n        imageBeforeUrl = await uploadFile(imageBefore, \"beforeAfter\");\n      } else {\n        const { data: existingNews } = await supabase\n          .from(\"news\")\n          .select(\"imageBefore\")\n          .eq(\"id\", id)\n          .single();\n        imageBeforeUrl = existingNews?.imageBefore || null;\n      }\n      if (imageAfter) {\n        imageAfterUrl = await uploadFile(imageAfter, \"beforeAfter\");\n      } else {\n        const { data: existingNews } = await supabase\n          .from(\"news\")\n          .select(\"imageAfter\")\n          .eq(\"id\", id)\n          .single();\n        imageAfterUrl = existingNews?.imageAfter || null;\n      }\n    }\n\n    const { data: userData } = await supabase.auth.getUser();\n    if (!userData?.user) {\n      throw new Error(\"User not authenticated\");\n    }\n\n    const { error } = await supabase\n      .from(\"news\")\n      .update({\n        title,\n        desc,\n        city,\n        formType,\n        image: imageUrl,\n        imageBefore: imageBeforeUrl,\n        imageAfter: imageAfterUrl,\n        creator_id: userData.user.id,\n      })\n      .eq(\"id\", id);\n\n    if (error) {\n      throw new Error(`Failed to update news: ${error.message}`);\n    }\n  } catch (error) {\n    console.error(\"Error in updateNews:\", error);\n    throw error;\n  }\n}\n\nexport async function getAllNews(page: number = 1, limit: number = 6) {\n  const supabase = await createServerClientInstance();\n  const offset = (page - 1) * limit;\n\n  try {\n    const { data, count, error } = await supabase\n      .from(\"news\")\n      .select(\"*\", { count: \"exact\" }) // Sørg for at tælle det totale antal\n      .order(\"created_at\", { ascending: false })\n      .range(offset, offset + limit - 1);\n\n    if (error) {\n      throw new Error(`Failed to fetch news: ${error.message}`);\n    }\n\n    return { news: data, total: count || 0 };\n  } catch (err) {\n    console.error(\"Unexpected error during fetching news:\", err);\n    throw err;\n  }\n}\n\nexport async function getNewsById(newsId: number) {\n  const supabase = await createServerClientInstance();\n\n  try {\n    const { data, error } = await supabase\n      .from(\"news\")\n      .select(\"*\")\n      .eq(\"id\", newsId)\n      .single();\n\n    if (error) {\n      throw new Error(`Failed to fetch news by ID: ${error.message}`);\n    }\n\n    return data;\n  } catch (err) {\n    console.error(\"Unexpected error during fetching news by ID:\", err);\n    throw err;\n  }\n}\n\nexport async function deleteNews(newsId: number): Promise<void> {\n  const supabase = await createServerClientInstance();\n\n  try {\n    const { error } = await supabase.from(\"news\").delete().eq(\"id\", newsId);\n\n    if (error) {\n      throw new Error(`Failed to delete news: ${error.message}`);\n    }\n  } catch (error) {\n    console.error(\"Error in deleteNews:\", error);\n    throw error;\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 491, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 497, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/lib/auth/useAuthStore.ts"],"sourcesContent":["import { create } from \"zustand\";\n\n// Definér typen for brugerens data\ninterface User {\n  id: string;\n  email: string | undefined;\n}\n\n// Definér Zustand state\ninterface AuthState {\n  user: User | null; // Brugerens data\n  role: \"admin\" | \"editor\" | null; // Brugerens rolle\n  setUser: (user: User) => void; // Sæt brugerdata\n  setRole: (role: \"admin\" | \"editor\") => void; // Sæt brugerrolle\n  clearSession: () => void; // Ryd session\n}\n\n// Opret Zustand-store\nexport const useAuthStore = create<AuthState>((set) => ({\n  user: null,\n  role: null,\n  setUser: (user) => set({ user }),\n  setRole: (role) => set({ role }),\n  clearSession: () => set({ user: null, role: null }),\n}));\n"],"names":[],"mappings":";;;AAAA;;AAkBO,MAAM,eAAe,CAAA,GAAA,wIAAA,CAAA,SAAM,AAAD,EAAa,CAAC,MAAQ,CAAC;QACtD,MAAM;QACN,MAAM;QACN,SAAS,CAAC,OAAS,IAAI;gBAAE;YAAK;QAC9B,SAAS,CAAC,OAAS,IAAI;gBAAE;YAAK;QAC9B,cAAc,IAAM,IAAI;gBAAE,MAAM;gBAAM,MAAM;YAAK;IACnD,CAAC"}},
    {"offset": {"line": 516, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 522, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcmoller/Documents/GitHub/hhservice/src/lib/auth/readUserSession.ts"],"sourcesContent":["\"use server\";\n\nimport { createServerClientInstance } from \"@/utils/supabase/server\";\nimport { useAuthStore } from \"./useAuthStore\";\n\nexport async function readUserSession() {\n  const supabase = await createServerClientInstance();\n\n  try {\n    // Hent brugerdata fra Supabase session\n    const { data: userResponse, error: userError } =\n      await supabase.auth.getUser();\n\n    if (userError || !userResponse?.user) {\n      console.error(\"User fetch error:\", userError?.message || \"No user found\");\n      return null;\n    }\n\n    // Hent rolle direkte fra brugerens metadata\n    const role = userResponse.user.user_metadata?.role;\n\n    if (!role) {\n      console.error(\"Role not found in metadata\");\n      return null;\n    }\n\n    return {\n      user: userResponse.user,\n      role,\n    };\n  } catch (error) {\n    console.error(\"Unexpected error in readUserSession:\", error);\n    return null;\n  }\n}\n\nexport async function fetchAndSetUserSession() {\n  try {\n    const session = await readUserSession();\n\n    if (session) {\n      useAuthStore.getState().setUser({\n        id: session.user.id,\n        email: session.user.email,\n      });\n      useAuthStore.getState().setRole(session.role as \"admin\" | \"editor\");\n    } else {\n      useAuthStore.getState().clearSession();\n    }\n  } catch (error) {\n    console.error(\"Failed to fetch and set session:\", error);\n    useAuthStore.getState().clearSession();\n  }\n}\n"],"names":[],"mappings":";;;;;;AAEA;AACA;;;;;;AAEO,eAAe,uCAAa,GAAb;IACpB,MAAM,WAAW,MAAM,CAAA,GAAA,kIAAA,CAAA,6BAA0B,AAAD;IAEhD,IAAI;QACF,uCAAuC;QACvC,MAAM,EAAE,MAAM,YAAY,EAAE,OAAO,SAAS,EAAE,GAC5C,MAAM,SAAS,IAAI,CAAC,OAAO;QAE7B,IAAI,aAAa,CAAC,cAAc,MAAM;YACpC,QAAQ,KAAK,CAAC,qBAAqB,WAAW,WAAW;YACzD,OAAO;QACT;QAEA,4CAA4C;QAC5C,MAAM,OAAO,aAAa,IAAI,CAAC,aAAa,EAAE;QAE9C,IAAI,CAAC,MAAM;YACT,QAAQ,KAAK,CAAC;YACd,OAAO;QACT;QAEA,OAAO;YACL,MAAM,aAAa,IAAI;YACvB;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wCAAwC;QACtD,OAAO;IACT;AACF;AAEO,eAAe,uCAAoB,GAApB;IACpB,IAAI;QACF,MAAM,UAAU,MAAM;QAEtB,IAAI,SAAS;YACX,kIAAA,CAAA,eAAY,CAAC,QAAQ,GAAG,OAAO,CAAC;gBAC9B,IAAI,QAAQ,IAAI,CAAC,EAAE;gBACnB,OAAO,QAAQ,IAAI,CAAC,KAAK;YAC3B;YACA,kIAAA,CAAA,eAAY,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI;QAC9C,OAAO;YACL,kIAAA,CAAA,eAAY,CAAC,QAAQ,GAAG,YAAY;QACtC;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oCAAoC;QAClD,kIAAA,CAAA,eAAY,CAAC,QAAQ,GAAG,YAAY;IACtC;AACF;;;IAhDsB;IA+BA;;AA/BA,+OAAA;AA+BA,+OAAA"}},
    {"offset": {"line": 583, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 589, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 601, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}